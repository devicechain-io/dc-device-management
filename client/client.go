// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package client

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// __createDeviceTypeInput is used internally by genqlient
type __createDeviceTypeInput struct {
	Token           string `json:"token"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	ImageUrl        string `json:"imageUrl"`
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
	ForegroundColor string `json:"foregroundColor"`
	BorderColor     string `json:"borderColor"`
	Metadata        string `json:"metadata"`
}

// GetToken returns __createDeviceTypeInput.Token, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetToken() string { return v.Token }

// GetName returns __createDeviceTypeInput.Name, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetName() string { return v.Name }

// GetDescription returns __createDeviceTypeInput.Description, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetDescription() string { return v.Description }

// GetImageUrl returns __createDeviceTypeInput.ImageUrl, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetImageUrl() string { return v.ImageUrl }

// GetIcon returns __createDeviceTypeInput.Icon, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetIcon() string { return v.Icon }

// GetBackgroundColor returns __createDeviceTypeInput.BackgroundColor, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetBackgroundColor() string { return v.BackgroundColor }

// GetForegroundColor returns __createDeviceTypeInput.ForegroundColor, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetForegroundColor() string { return v.ForegroundColor }

// GetBorderColor returns __createDeviceTypeInput.BorderColor, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetBorderColor() string { return v.BorderColor }

// GetMetadata returns __createDeviceTypeInput.Metadata, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetMetadata() string { return v.Metadata }

// __getDeviceTypeByIdInput is used internally by genqlient
type __getDeviceTypeByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __getDeviceTypeByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__getDeviceTypeByIdInput) GetId() string { return v.Id }

// createDeviceTypeCreateDeviceType includes the requested fields of the GraphQL type DeviceType.
type createDeviceTypeCreateDeviceType struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

// GetId returns createDeviceTypeCreateDeviceType.Id, and is useful for accessing the field via an interface.
func (v *createDeviceTypeCreateDeviceType) GetId() string { return v.Id }

// GetToken returns createDeviceTypeCreateDeviceType.Token, and is useful for accessing the field via an interface.
func (v *createDeviceTypeCreateDeviceType) GetToken() string { return v.Token }

// createDeviceTypeResponse is returned by createDeviceType on success.
type createDeviceTypeResponse struct {
	CreateDeviceType createDeviceTypeCreateDeviceType `json:"createDeviceType"`
}

// GetCreateDeviceType returns createDeviceTypeResponse.CreateDeviceType, and is useful for accessing the field via an interface.
func (v *createDeviceTypeResponse) GetCreateDeviceType() createDeviceTypeCreateDeviceType {
	return v.CreateDeviceType
}

// getDeviceTypeByIdDeviceType includes the requested fields of the GraphQL type DeviceType.
type getDeviceTypeByIdDeviceType struct {
	Id              string `json:"id"`
	CreatedAt       string `json:"createdAt"`
	UpdatedAt       string `json:"updatedAt"`
	DeletedAt       string `json:"deletedAt"`
	Token           string `json:"token"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	ImageUrl        string `json:"imageUrl"`
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
	ForegroundColor string `json:"foregroundColor"`
	BorderColor     string `json:"borderColor"`
	Metadata        string `json:"metadata"`
}

// GetId returns getDeviceTypeByIdDeviceType.Id, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetId() string { return v.Id }

// GetCreatedAt returns getDeviceTypeByIdDeviceType.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns getDeviceTypeByIdDeviceType.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetUpdatedAt() string { return v.UpdatedAt }

// GetDeletedAt returns getDeviceTypeByIdDeviceType.DeletedAt, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetDeletedAt() string { return v.DeletedAt }

// GetToken returns getDeviceTypeByIdDeviceType.Token, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetToken() string { return v.Token }

// GetName returns getDeviceTypeByIdDeviceType.Name, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetName() string { return v.Name }

// GetDescription returns getDeviceTypeByIdDeviceType.Description, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetDescription() string { return v.Description }

// GetImageUrl returns getDeviceTypeByIdDeviceType.ImageUrl, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetImageUrl() string { return v.ImageUrl }

// GetIcon returns getDeviceTypeByIdDeviceType.Icon, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetIcon() string { return v.Icon }

// GetBackgroundColor returns getDeviceTypeByIdDeviceType.BackgroundColor, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetBackgroundColor() string { return v.BackgroundColor }

// GetForegroundColor returns getDeviceTypeByIdDeviceType.ForegroundColor, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetForegroundColor() string { return v.ForegroundColor }

// GetBorderColor returns getDeviceTypeByIdDeviceType.BorderColor, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetBorderColor() string { return v.BorderColor }

// GetMetadata returns getDeviceTypeByIdDeviceType.Metadata, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetMetadata() string { return v.Metadata }

// getDeviceTypeByIdResponse is returned by getDeviceTypeById on success.
type getDeviceTypeByIdResponse struct {
	DeviceType getDeviceTypeByIdDeviceType `json:"deviceType"`
}

// GetDeviceType returns getDeviceTypeByIdResponse.DeviceType, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdResponse) GetDeviceType() getDeviceTypeByIdDeviceType { return v.DeviceType }

func createDeviceType(
	ctx context.Context,
	client graphql.Client,
	token string,
	name string,
	description string,
	imageUrl string,
	icon string,
	backgroundColor string,
	foregroundColor string,
	borderColor string,
	metadata string,
) (*createDeviceTypeResponse, error) {
	__input := __createDeviceTypeInput{
		Token:           token,
		Name:            name,
		Description:     description,
		ImageUrl:        imageUrl,
		Icon:            icon,
		BackgroundColor: backgroundColor,
		ForegroundColor: foregroundColor,
		BorderColor:     borderColor,
		Metadata:        metadata,
	}
	var err error

	var retval createDeviceTypeResponse
	err = client.MakeRequest(
		ctx,
		"createDeviceType",
		`
mutation createDeviceType ($token: String!, $name: String, $description: String, $imageUrl: String, $icon: String, $backgroundColor: String, $foregroundColor: String, $borderColor: String, $metadata: String) {
	createDeviceType(request: {token:$token,name:$name,description:$description,imageUrl:$imageUrl,icon:$icon,backgroundColor:$backgroundColor,foregroundColor:$foregroundColor,borderColor:$borderColor,metadata:$metadata}) {
		id
		token
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func getDeviceTypeById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*getDeviceTypeByIdResponse, error) {
	__input := __getDeviceTypeByIdInput{
		Id: id,
	}
	var err error

	var retval getDeviceTypeByIdResponse
	err = client.MakeRequest(
		ctx,
		"getDeviceTypeById",
		`
query getDeviceTypeById ($id: ID!) {
	deviceType(id: $id) {
		id
		createdAt
		updatedAt
		deletedAt
		token
		name
		description
		imageUrl
		icon
		backgroundColor
		foregroundColor
		borderColor
		metadata
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}
