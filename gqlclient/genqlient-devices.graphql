# Create device type and return identifiers.
mutation createDeviceType($token: String!, $name: String, $description: String, 
  $imageUrl: String, $icon: String, $backgroundColor: String, $foregroundColor: String, $borderColor: String, $metadata: String) {
  createDeviceType(request: { 
    token: $token,
    name: $name,
    description: $description,
    imageUrl: $imageUrl,
    icon: $icon,
    backgroundColor: $backgroundColor,
    foregroundColor: $foregroundColor,
    borderColor: $borderColor,
    metadata: $metadata
  }) {
    id
    token
  }
}

# Get device type by unique token.
query getDeviceTypeByToken($token: String!) {
  deviceTypeByToken(token: $token) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    imageUrl
    icon
    backgroundColor
    foregroundColor
    borderColor
    metadata
  }
}

# List device types that match criteria.
query listDeviceTypes($pageNumber: Int!, $pageSize: Int!) {
  deviceTypes(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      name
      description
      imageUrl
      icon
      backgroundColor
      foregroundColor
      borderColor
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}

# Create device and return identifiers.
mutation createDevice($token: String!, $deviceTypeToken: String!, $name: String, $description: String, $metadata: String) {
  createDevice(request: { 
    token: $token, 
    deviceTypeToken: $deviceTypeToken,
    name: $name,
    description: $description,
    metadata: $metadata
  }) {
    id
    token
  }
}

# Get device by unique token.
query getDeviceByToken($token: String!) {
  deviceByToken(token: $token) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    deviceType {
      token
      name
      description
    }
    activeAssignments {
      token
    }
    metadata
  }
}

# List devices that match criteria.
query listDevices($pageNumber: Int!, $pageSize: Int!) {
  devices(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      name
      description
      deviceType {
        token
        name
        description
      }
      activeAssignments {
        token
      }
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}

# Create device relationship type and return identifiers.
mutation createDeviceRelationshipType($token: String!, $name: String, $description: String, $metadata: String) {
  createDeviceRelationshipType(request: { 
    token: $token,
    name: $name,
    description: $description,
    metadata: $metadata
  }) {
    id
    token
  }
}

# Get device relationship type by unique token.
query getDeviceRelationshipTypeByToken($token: String!) {
  deviceRelationshipTypeByToken(token: $token) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    metadata
  }
}

# List device relationship types that match criteria.
query listDeviceRelationshipTypes($pageNumber: Int!, $pageSize: Int!) {
  deviceRelationshipTypes(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      name
      description
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}

# Create device relationship and return identifiers.
mutation createDeviceRelationship($token: String!, $sourceDevice: String!, $targetDevice: String!, $relationshipType: String!) {
  createDeviceRelationship(
    request: {
      token: $token,
      sourceDevice: $sourceDevice
      targetDevice: $targetDevice
      relationshipType: $relationshipType
    }
  ) {
    id
    token
  }
}

# Get device relationship by unique token.
query getDeviceRelationshipByToken($token: String!) {
  deviceRelationshipByToken(token: $token) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    sourceDevice {
      token
      name
      description
    }
    targetDevice {
      token
      name
      description
    }
    relationshipType {
      token
      name
      description
    }
    metadata
  }
}

# List device relationships that match criteria.
query listDeviceRelationships($pageNumber: Int!, $pageSize: Int!) {
  deviceRelationships(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      sourceDevice {
        token
        name
        description
      }
      targetDevice {
        token
        name
        description
      }
      relationshipType {
        token
        name
        description
      }
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}

# Create device group and return identifiers.
mutation createDeviceGroup($token: String!, $name: String, $description: String, 
  $imageUrl: String, $icon: String, $backgroundColor: String, $foregroundColor: String, $borderColor: String, $metadata: String) {
  createDeviceGroup(request: { 
    token: $token,
    name: $name,
    description: $description,
    imageUrl: $imageUrl,
    icon: $icon,
    backgroundColor: $backgroundColor,
    foregroundColor: $foregroundColor,
    borderColor: $borderColor,
    metadata: $metadata
  }) {
    id
    token
  }
}

# Get device group by unique token.
query getDeviceGroupByToken($token: String!) {
  deviceGroupByToken(token: $token) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    imageUrl
    icon
    backgroundColor
    foregroundColor
    borderColor
    metadata
  }
}

# List device groups that match criteria.
query listDeviceGroups($pageNumber: Int!, $pageSize: Int!) {
  deviceGroups(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      name
      description
      imageUrl
      icon
      backgroundColor
      foregroundColor
      borderColor
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}

# Create device group relationship type and return identifiers.
mutation createDeviceGroupRelationshipType($token: String!, $name: String, $description: String, $metadata: String) {
  createDeviceGroupRelationshipType(request: { 
    token: $token,
    name: $name,
    description: $description,
    metadata: $metadata
  }) {
    id
    token
  }
}

# Get device group relationship type by unique token.
query getDeviceGroupRelationshipTypeByToken($token: String!) {
  deviceGroupRelationshipTypeByToken(token: $token) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    metadata
  }
}

# List device group relationship types that match criteria.
query listDeviceGroupRelationshipTypes($pageNumber: Int!, $pageSize: Int!) {
  deviceGroupRelationshipTypes(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      name
      description
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}

# Create device group relationship and return identifiers.
mutation createDeviceGroupRelationship($token: String!, $deviceGroup: String!, $device: String!, $relationshipType: String!) {
  createDeviceGroupRelationship(
    request: {
      token: $token,
      deviceGroup: $deviceGroup,
      device: $device,
      relationshipType: $relationshipType
    }
  ) {
    id
    token
  }
}

# Get device group relationship by unique token.
query getDeviceGroupRelationshipByToken($token: String!) {
  deviceGroupRelationshipByToken(token: $token) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    deviceGroup {
      token
      name
      description
    }
    device {
      token
      name
      description
    }
    relationshipType {
      token
      name
      description
    }
    metadata
  }
}

# List device group relationships that match criteria.
query listDeviceGroupRelationships($pageNumber: Int!, $pageSize: Int!) {
  deviceGroupRelationships(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      deviceGroup {
        token
        name
        description
      }
      device {
        token
        name
        description
      }
      relationshipType {
        token
        name
        description
      }
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}
