# Create device type and return identifiers.
mutation createDeviceType($token: String!, $name: String, $description: String, 
  $imageUrl: String, $icon: String, $backgroundColor: String, $foregroundColor: String, $borderColor: String, $metadata: String) {
  createDeviceType(request: { 
    token: $token,
    name: $name,
    description: $description,
    imageUrl: $imageUrl,
    icon: $icon,
    backgroundColor: $backgroundColor,
    foregroundColor: $foregroundColor,
    borderColor: $borderColor,
    metadata: $metadata
  }) {
    id
    token
  }
}

# Get device type by unique internal id.
query getDeviceTypeById($id: ID!) {
  deviceType(id: $id) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    imageUrl
    icon
    backgroundColor
    foregroundColor
    borderColor
    metadata
  }
}

# Get device type by unique token.
query getDeviceTypeByToken($token: String!) {
  deviceTypeByToken(token: $token) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    imageUrl
    icon
    backgroundColor
    foregroundColor
    borderColor
    metadata
  }
}

# List device types that match criteria.
query listDeviceTypes($pageNumber: Int!, $pageSize: Int!) {
  deviceTypes(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      name
      description
      imageUrl
      icon
      backgroundColor
      foregroundColor
      borderColor
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}

# Create device and return identifiers.
mutation createDevice($token: String!, $deviceTypeToken: String!, $name: String, $description: String, $metadata: String) {
  createDevice(request: { 
    token: $token, 
    deviceTypeToken: $deviceTypeToken,
    name: $name,
    description: $description,
    metadata: $metadata
  }) {
    id
    token
  }
}

# Get device by unique internal id.
query getDeviceById($id: ID!) {
  device(id: $id) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    deviceType {
      token
      name
      description
    }
    activeAssignments {
      id
      token
    }
    metadata
  }
}

# Get device by unique token.
query getDeviceByToken($token: String!) {
  deviceByToken(token: $token) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    deviceType {
      token
      name
      description
    }
    activeAssignments {
      id
      token
    }
    metadata
  }
}

# List devices that match criteria.
query listDevices($pageNumber: Int!, $pageSize: Int!) {
  devices(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      name
      description
      deviceType {
        token
        name
        description
      }
      activeAssignments {
        id
        token
      }
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}
