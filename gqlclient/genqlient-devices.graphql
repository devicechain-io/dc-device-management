# Content associated with a device type response.
fragment DefaultDeviceType on DeviceType {
  id
  createdAt
  updatedAt
  deletedAt
  token
  name
  description
  imageUrl
  icon
  backgroundColor
  foregroundColor
  borderColor
  metadata
}

# Content associated with a device response.
fragment DefaultDevice on Device {
  id
  createdAt
  updatedAt
  deletedAt
  token
  name
  description
  deviceType {
    token
    name
    description
  }
  activeAssignments {
    token
  }
  metadata
}

# Content associated with a device relationship type response.
fragment DefaultDeviceRelationshipType on DeviceRelationshipType {
  id
  createdAt
  updatedAt
  deletedAt
  token
  name
  description
  metadata
}

# Content associated with a device relationship response.
fragment DefaultDeviceRelationship on DeviceRelationship {
  id
  createdAt
  updatedAt
  deletedAt
  token
  sourceDevice {
    token
    name
    description
  }
  targetDevice {
    token
    name
    description
  }
  relationshipType {
    token
    name
    description
  }
  metadata
}

# Content associated with a device group.
fragment DefaultDeviceGroup on DeviceGroup {
  id
  createdAt
  updatedAt
  deletedAt
  token
  name
  description
  imageUrl
  icon
  backgroundColor
  foregroundColor
  borderColor
  metadata
}

# Content associated with a device group relationship type.
fragment DefaultDeviceGroupRelationshipType on DeviceGroupRelationshipType {
  id
  createdAt
  updatedAt
  deletedAt
  token
  name
  description
  metadata
}

# Content associated with a device group relationship.
fragment DefaultDeviceGroupRelationship on DeviceGroupRelationship {
  id
  createdAt
  updatedAt
  deletedAt
  token
  deviceGroup {
    token
    name
    description
  }
  device {
    token
    name
    description
  }
  relationshipType {
    token
    name
    description
  }
  metadata
}

# Create device type and return identifiers.
mutation createDeviceType($token: String!, $name: String, $description: String, 
  $imageUrl: String, $icon: String, $backgroundColor: String, $foregroundColor: String, $borderColor: String, $metadata: String) {
  createDeviceType(request: { 
    token: $token,
    name: $name,
    description: $description,
    imageUrl: $imageUrl,
    icon: $icon,
    backgroundColor: $backgroundColor,
    foregroundColor: $foregroundColor,
    borderColor: $borderColor,
    metadata: $metadata
  }) {
    ...DefaultDeviceType
  }
}

# Get device types by unique tokens.
query getDeviceTypesByToken($tokens: [String!]!) {
  deviceTypesByToken(tokens: $tokens) {
    ...DefaultDeviceType
  }
}

# List device types that match criteria.
query listDeviceTypes($pageNumber: Int!, $pageSize: Int!) {
  deviceTypes(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      ...DefaultDeviceType
    }
    pagination {
      ...DefaultPagination
    }
  }
}

# Create device and return identifiers.
mutation createDevice($token: String!, $deviceTypeToken: String!, $name: String, $description: String, $metadata: String) {
  createDevice(request: { 
    token: $token, 
    deviceTypeToken: $deviceTypeToken,
    name: $name,
    description: $description,
    metadata: $metadata
  }) {
    ...DefaultDevice
  }
}

# Get devices by unique tokens.
query getDevicesByToken($tokens: [String!]!) {
  devicesByToken(tokens: $tokens) {
    ...DefaultDevice
  }
}

# List devices that match criteria.
query listDevices($pageNumber: Int!, $pageSize: Int!) {
  devices(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      ...DefaultDevice
    }
    pagination {
      ...DefaultPagination
    }
  }
}

# Create device relationship type and return identifiers.
mutation createDeviceRelationshipType($token: String!, $name: String, $description: String, $metadata: String) {
  createDeviceRelationshipType(request: { 
    token: $token,
    name: $name,
    description: $description,
    metadata: $metadata
  }) {
    ...DefaultDeviceRelationshipType
  }
}

# Get device relationship types by unique tokens.
query getDeviceRelationshipTypesByToken($tokens: [String!]!) {
  deviceRelationshipTypesByToken(tokens: $tokens) {
    ...DefaultDeviceRelationshipType
  }
}

# List device relationship types that match criteria.
query listDeviceRelationshipTypes($pageNumber: Int!, $pageSize: Int!) {
  deviceRelationshipTypes(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      ...DefaultDeviceRelationshipType
    }
    pagination {
      ...DefaultPagination
    }
  }
}

# Create device relationship and return identifiers.
mutation createDeviceRelationship($token: String!, $sourceDevice: String!, $targetDevice: String!, $relationshipType: String!) {
  createDeviceRelationship(
    request: {
      token: $token,
      sourceDevice: $sourceDevice
      targetDevice: $targetDevice
      relationshipType: $relationshipType
    }
  ) {
    ...DefaultDeviceRelationship
  }
}

# Get device relationships by unique tokens.
query getDeviceRelationshipsByToken($tokens: [String!]!) {
  deviceRelationshipsByToken(tokens: $tokens) {
    ...DefaultDeviceRelationship
  }
}

# List device relationships that match criteria.
query listDeviceRelationships($pageNumber: Int!, $pageSize: Int!) {
  deviceRelationships(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      ...DefaultDeviceRelationship
    }
    pagination {
      ...DefaultPagination
    }
  }
}

# Create device group and return identifiers.
mutation createDeviceGroup($token: String!, $name: String, $description: String, 
  $imageUrl: String, $icon: String, $backgroundColor: String, $foregroundColor: String, $borderColor: String, $metadata: String) {
  createDeviceGroup(request: { 
    token: $token,
    name: $name,
    description: $description,
    imageUrl: $imageUrl,
    icon: $icon,
    backgroundColor: $backgroundColor,
    foregroundColor: $foregroundColor,
    borderColor: $borderColor,
    metadata: $metadata
  }) {
    ...DefaultDeviceGroup
  }
}

# Get device groups by unique tokens.
query getDeviceGroupsByToken($tokens: [String!]!) {
  deviceGroupsByToken(tokens: $tokens) {
    ...DefaultDeviceGroup
  }
}

# List device groups that match criteria.
query listDeviceGroups($pageNumber: Int!, $pageSize: Int!) {
  deviceGroups(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      ...DefaultDeviceGroup
    }
    pagination {
      ...DefaultPagination
    }
  }
}

# Create device group relationship type and return identifiers.
mutation createDeviceGroupRelationshipType($token: String!, $name: String, $description: String, $metadata: String) {
  createDeviceGroupRelationshipType(request: { 
    token: $token,
    name: $name,
    description: $description,
    metadata: $metadata
  }) {
    ...DefaultDeviceGroupRelationshipType
  }
}

# Get device group relationship types by unique token.
query getDeviceGroupRelationshipTypesByToken($tokens: [String!]!) {
  deviceGroupRelationshipTypesByToken(tokens: $tokens) {
    ...DefaultDeviceGroupRelationshipType
  }
}

# List device group relationship types that match criteria.
query listDeviceGroupRelationshipTypes($pageNumber: Int!, $pageSize: Int!) {
  deviceGroupRelationshipTypes(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      ...DefaultDeviceGroupRelationshipType
    }
    pagination {
      ...DefaultPagination
    }
  }
}

# Create device group relationship and return identifiers.
mutation createDeviceGroupRelationship($token: String!, $deviceGroup: String!, $device: String!, $relationshipType: String!) {
  createDeviceGroupRelationship(
    request: {
      token: $token,
      deviceGroup: $deviceGroup,
      device: $device,
      relationshipType: $relationshipType
    }
  ) {
    ...DefaultDeviceGroupRelationship
  }
}

# Get device group relationships by unique tokens.
query getDeviceGroupRelationshipsByToken($tokens: [String!]!) {
  deviceGroupRelationshipsByToken(tokens: $tokens) {
    ...DefaultDeviceGroupRelationship
  }
}

# List device group relationships that match criteria.
query listDeviceGroupRelationships($pageNumber: Int!, $pageSize: Int!) {
  deviceGroupRelationships(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      ...DefaultDeviceGroupRelationship
    }
    pagination {
      ...DefaultPagination
    }
  }
}
