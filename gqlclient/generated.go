// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gqlclient

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// __createDeviceInput is used internally by genqlient
type __createDeviceInput struct {
	Token           string `json:"token"`
	DeviceTypeToken string `json:"deviceTypeToken"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	Metadata        string `json:"metadata"`
}

// GetToken returns __createDeviceInput.Token, and is useful for accessing the field via an interface.
func (v *__createDeviceInput) GetToken() string { return v.Token }

// GetDeviceTypeToken returns __createDeviceInput.DeviceTypeToken, and is useful for accessing the field via an interface.
func (v *__createDeviceInput) GetDeviceTypeToken() string { return v.DeviceTypeToken }

// GetName returns __createDeviceInput.Name, and is useful for accessing the field via an interface.
func (v *__createDeviceInput) GetName() string { return v.Name }

// GetDescription returns __createDeviceInput.Description, and is useful for accessing the field via an interface.
func (v *__createDeviceInput) GetDescription() string { return v.Description }

// GetMetadata returns __createDeviceInput.Metadata, and is useful for accessing the field via an interface.
func (v *__createDeviceInput) GetMetadata() string { return v.Metadata }

// __createDeviceTypeInput is used internally by genqlient
type __createDeviceTypeInput struct {
	Token           string `json:"token"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	ImageUrl        string `json:"imageUrl"`
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
	ForegroundColor string `json:"foregroundColor"`
	BorderColor     string `json:"borderColor"`
	Metadata        string `json:"metadata"`
}

// GetToken returns __createDeviceTypeInput.Token, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetToken() string { return v.Token }

// GetName returns __createDeviceTypeInput.Name, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetName() string { return v.Name }

// GetDescription returns __createDeviceTypeInput.Description, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetDescription() string { return v.Description }

// GetImageUrl returns __createDeviceTypeInput.ImageUrl, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetImageUrl() string { return v.ImageUrl }

// GetIcon returns __createDeviceTypeInput.Icon, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetIcon() string { return v.Icon }

// GetBackgroundColor returns __createDeviceTypeInput.BackgroundColor, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetBackgroundColor() string { return v.BackgroundColor }

// GetForegroundColor returns __createDeviceTypeInput.ForegroundColor, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetForegroundColor() string { return v.ForegroundColor }

// GetBorderColor returns __createDeviceTypeInput.BorderColor, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetBorderColor() string { return v.BorderColor }

// GetMetadata returns __createDeviceTypeInput.Metadata, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetMetadata() string { return v.Metadata }

// __getDeviceByIdInput is used internally by genqlient
type __getDeviceByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __getDeviceByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__getDeviceByIdInput) GetId() string { return v.Id }

// __getDeviceByTokenInput is used internally by genqlient
type __getDeviceByTokenInput struct {
	Token string `json:"token"`
}

// GetToken returns __getDeviceByTokenInput.Token, and is useful for accessing the field via an interface.
func (v *__getDeviceByTokenInput) GetToken() string { return v.Token }

// __getDeviceTypeByIdInput is used internally by genqlient
type __getDeviceTypeByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __getDeviceTypeByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__getDeviceTypeByIdInput) GetId() string { return v.Id }

// __getDeviceTypeByTokenInput is used internally by genqlient
type __getDeviceTypeByTokenInput struct {
	Token string `json:"token"`
}

// GetToken returns __getDeviceTypeByTokenInput.Token, and is useful for accessing the field via an interface.
func (v *__getDeviceTypeByTokenInput) GetToken() string { return v.Token }

// __listDeviceTypesInput is used internally by genqlient
type __listDeviceTypesInput struct {
	PageNumber int `json:"pageNumber"`
	PageSize   int `json:"pageSize"`
}

// GetPageNumber returns __listDeviceTypesInput.PageNumber, and is useful for accessing the field via an interface.
func (v *__listDeviceTypesInput) GetPageNumber() int { return v.PageNumber }

// GetPageSize returns __listDeviceTypesInput.PageSize, and is useful for accessing the field via an interface.
func (v *__listDeviceTypesInput) GetPageSize() int { return v.PageSize }

// __listDevicesInput is used internally by genqlient
type __listDevicesInput struct {
	PageNumber int `json:"pageNumber"`
	PageSize   int `json:"pageSize"`
}

// GetPageNumber returns __listDevicesInput.PageNumber, and is useful for accessing the field via an interface.
func (v *__listDevicesInput) GetPageNumber() int { return v.PageNumber }

// GetPageSize returns __listDevicesInput.PageSize, and is useful for accessing the field via an interface.
func (v *__listDevicesInput) GetPageSize() int { return v.PageSize }

// createDeviceCreateDevice includes the requested fields of the GraphQL type Device.
type createDeviceCreateDevice struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

// GetId returns createDeviceCreateDevice.Id, and is useful for accessing the field via an interface.
func (v *createDeviceCreateDevice) GetId() string { return v.Id }

// GetToken returns createDeviceCreateDevice.Token, and is useful for accessing the field via an interface.
func (v *createDeviceCreateDevice) GetToken() string { return v.Token }

// createDeviceResponse is returned by createDevice on success.
type createDeviceResponse struct {
	CreateDevice createDeviceCreateDevice `json:"createDevice"`
}

// GetCreateDevice returns createDeviceResponse.CreateDevice, and is useful for accessing the field via an interface.
func (v *createDeviceResponse) GetCreateDevice() createDeviceCreateDevice { return v.CreateDevice }

// createDeviceTypeCreateDeviceType includes the requested fields of the GraphQL type DeviceType.
type createDeviceTypeCreateDeviceType struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

// GetId returns createDeviceTypeCreateDeviceType.Id, and is useful for accessing the field via an interface.
func (v *createDeviceTypeCreateDeviceType) GetId() string { return v.Id }

// GetToken returns createDeviceTypeCreateDeviceType.Token, and is useful for accessing the field via an interface.
func (v *createDeviceTypeCreateDeviceType) GetToken() string { return v.Token }

// createDeviceTypeResponse is returned by createDeviceType on success.
type createDeviceTypeResponse struct {
	CreateDeviceType createDeviceTypeCreateDeviceType `json:"createDeviceType"`
}

// GetCreateDeviceType returns createDeviceTypeResponse.CreateDeviceType, and is useful for accessing the field via an interface.
func (v *createDeviceTypeResponse) GetCreateDeviceType() createDeviceTypeCreateDeviceType {
	return v.CreateDeviceType
}

// getDeviceByIdDevice includes the requested fields of the GraphQL type Device.
type getDeviceByIdDevice struct {
	Id                string                                                 `json:"id"`
	CreatedAt         string                                                 `json:"createdAt"`
	UpdatedAt         string                                                 `json:"updatedAt"`
	DeletedAt         string                                                 `json:"deletedAt"`
	Token             string                                                 `json:"token"`
	Name              string                                                 `json:"name"`
	Description       string                                                 `json:"description"`
	DeviceType        getDeviceByIdDeviceDeviceType                          `json:"deviceType"`
	ActiveAssignments []getDeviceByIdDeviceActiveAssignmentsDeviceAssignment `json:"activeAssignments"`
	Metadata          string                                                 `json:"metadata"`
}

// GetId returns getDeviceByIdDevice.Id, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDevice) GetId() string { return v.Id }

// GetCreatedAt returns getDeviceByIdDevice.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDevice) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns getDeviceByIdDevice.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDevice) GetUpdatedAt() string { return v.UpdatedAt }

// GetDeletedAt returns getDeviceByIdDevice.DeletedAt, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDevice) GetDeletedAt() string { return v.DeletedAt }

// GetToken returns getDeviceByIdDevice.Token, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDevice) GetToken() string { return v.Token }

// GetName returns getDeviceByIdDevice.Name, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDevice) GetName() string { return v.Name }

// GetDescription returns getDeviceByIdDevice.Description, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDevice) GetDescription() string { return v.Description }

// GetDeviceType returns getDeviceByIdDevice.DeviceType, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDevice) GetDeviceType() getDeviceByIdDeviceDeviceType { return v.DeviceType }

// GetActiveAssignments returns getDeviceByIdDevice.ActiveAssignments, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDevice) GetActiveAssignments() []getDeviceByIdDeviceActiveAssignmentsDeviceAssignment {
	return v.ActiveAssignments
}

// GetMetadata returns getDeviceByIdDevice.Metadata, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDevice) GetMetadata() string { return v.Metadata }

// getDeviceByIdDeviceActiveAssignmentsDeviceAssignment includes the requested fields of the GraphQL type DeviceAssignment.
type getDeviceByIdDeviceActiveAssignmentsDeviceAssignment struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

// GetId returns getDeviceByIdDeviceActiveAssignmentsDeviceAssignment.Id, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDeviceActiveAssignmentsDeviceAssignment) GetId() string { return v.Id }

// GetToken returns getDeviceByIdDeviceActiveAssignmentsDeviceAssignment.Token, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDeviceActiveAssignmentsDeviceAssignment) GetToken() string { return v.Token }

// getDeviceByIdDeviceDeviceType includes the requested fields of the GraphQL type DeviceType.
type getDeviceByIdDeviceDeviceType struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns getDeviceByIdDeviceDeviceType.Token, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDeviceDeviceType) GetToken() string { return v.Token }

// GetName returns getDeviceByIdDeviceDeviceType.Name, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDeviceDeviceType) GetName() string { return v.Name }

// GetDescription returns getDeviceByIdDeviceDeviceType.Description, and is useful for accessing the field via an interface.
func (v *getDeviceByIdDeviceDeviceType) GetDescription() string { return v.Description }

// getDeviceByIdResponse is returned by getDeviceById on success.
type getDeviceByIdResponse struct {
	Device getDeviceByIdDevice `json:"device"`
}

// GetDevice returns getDeviceByIdResponse.Device, and is useful for accessing the field via an interface.
func (v *getDeviceByIdResponse) GetDevice() getDeviceByIdDevice { return v.Device }

// getDeviceByTokenDeviceByTokenDevice includes the requested fields of the GraphQL type Device.
type getDeviceByTokenDeviceByTokenDevice struct {
	Id                string                                                                 `json:"id"`
	CreatedAt         string                                                                 `json:"createdAt"`
	UpdatedAt         string                                                                 `json:"updatedAt"`
	DeletedAt         string                                                                 `json:"deletedAt"`
	Token             string                                                                 `json:"token"`
	Name              string                                                                 `json:"name"`
	Description       string                                                                 `json:"description"`
	DeviceType        getDeviceByTokenDeviceByTokenDeviceDeviceType                          `json:"deviceType"`
	ActiveAssignments []getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment `json:"activeAssignments"`
	Metadata          string                                                                 `json:"metadata"`
}

// GetId returns getDeviceByTokenDeviceByTokenDevice.Id, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetId() string { return v.Id }

// GetCreatedAt returns getDeviceByTokenDeviceByTokenDevice.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns getDeviceByTokenDeviceByTokenDevice.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetUpdatedAt() string { return v.UpdatedAt }

// GetDeletedAt returns getDeviceByTokenDeviceByTokenDevice.DeletedAt, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetDeletedAt() string { return v.DeletedAt }

// GetToken returns getDeviceByTokenDeviceByTokenDevice.Token, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetToken() string { return v.Token }

// GetName returns getDeviceByTokenDeviceByTokenDevice.Name, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetName() string { return v.Name }

// GetDescription returns getDeviceByTokenDeviceByTokenDevice.Description, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetDescription() string { return v.Description }

// GetDeviceType returns getDeviceByTokenDeviceByTokenDevice.DeviceType, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetDeviceType() getDeviceByTokenDeviceByTokenDeviceDeviceType {
	return v.DeviceType
}

// GetActiveAssignments returns getDeviceByTokenDeviceByTokenDevice.ActiveAssignments, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetActiveAssignments() []getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment {
	return v.ActiveAssignments
}

// GetMetadata returns getDeviceByTokenDeviceByTokenDevice.Metadata, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetMetadata() string { return v.Metadata }

// getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment includes the requested fields of the GraphQL type DeviceAssignment.
type getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

// GetId returns getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment.Id, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment) GetId() string {
	return v.Id
}

// GetToken returns getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment.Token, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment) GetToken() string {
	return v.Token
}

// getDeviceByTokenDeviceByTokenDeviceDeviceType includes the requested fields of the GraphQL type DeviceType.
type getDeviceByTokenDeviceByTokenDeviceDeviceType struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns getDeviceByTokenDeviceByTokenDeviceDeviceType.Token, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDeviceDeviceType) GetToken() string { return v.Token }

// GetName returns getDeviceByTokenDeviceByTokenDeviceDeviceType.Name, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDeviceDeviceType) GetName() string { return v.Name }

// GetDescription returns getDeviceByTokenDeviceByTokenDeviceDeviceType.Description, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDeviceDeviceType) GetDescription() string { return v.Description }

// getDeviceByTokenResponse is returned by getDeviceByToken on success.
type getDeviceByTokenResponse struct {
	DeviceByToken getDeviceByTokenDeviceByTokenDevice `json:"deviceByToken"`
}

// GetDeviceByToken returns getDeviceByTokenResponse.DeviceByToken, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenResponse) GetDeviceByToken() getDeviceByTokenDeviceByTokenDevice {
	return v.DeviceByToken
}

// getDeviceTypeByIdDeviceType includes the requested fields of the GraphQL type DeviceType.
type getDeviceTypeByIdDeviceType struct {
	Id              string `json:"id"`
	CreatedAt       string `json:"createdAt"`
	UpdatedAt       string `json:"updatedAt"`
	DeletedAt       string `json:"deletedAt"`
	Token           string `json:"token"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	ImageUrl        string `json:"imageUrl"`
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
	ForegroundColor string `json:"foregroundColor"`
	BorderColor     string `json:"borderColor"`
	Metadata        string `json:"metadata"`
}

// GetId returns getDeviceTypeByIdDeviceType.Id, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetId() string { return v.Id }

// GetCreatedAt returns getDeviceTypeByIdDeviceType.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns getDeviceTypeByIdDeviceType.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetUpdatedAt() string { return v.UpdatedAt }

// GetDeletedAt returns getDeviceTypeByIdDeviceType.DeletedAt, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetDeletedAt() string { return v.DeletedAt }

// GetToken returns getDeviceTypeByIdDeviceType.Token, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetToken() string { return v.Token }

// GetName returns getDeviceTypeByIdDeviceType.Name, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetName() string { return v.Name }

// GetDescription returns getDeviceTypeByIdDeviceType.Description, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetDescription() string { return v.Description }

// GetImageUrl returns getDeviceTypeByIdDeviceType.ImageUrl, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetImageUrl() string { return v.ImageUrl }

// GetIcon returns getDeviceTypeByIdDeviceType.Icon, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetIcon() string { return v.Icon }

// GetBackgroundColor returns getDeviceTypeByIdDeviceType.BackgroundColor, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetBackgroundColor() string { return v.BackgroundColor }

// GetForegroundColor returns getDeviceTypeByIdDeviceType.ForegroundColor, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetForegroundColor() string { return v.ForegroundColor }

// GetBorderColor returns getDeviceTypeByIdDeviceType.BorderColor, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetBorderColor() string { return v.BorderColor }

// GetMetadata returns getDeviceTypeByIdDeviceType.Metadata, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdDeviceType) GetMetadata() string { return v.Metadata }

// getDeviceTypeByIdResponse is returned by getDeviceTypeById on success.
type getDeviceTypeByIdResponse struct {
	DeviceType getDeviceTypeByIdDeviceType `json:"deviceType"`
}

// GetDeviceType returns getDeviceTypeByIdResponse.DeviceType, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByIdResponse) GetDeviceType() getDeviceTypeByIdDeviceType { return v.DeviceType }

// getDeviceTypeByTokenDeviceTypeByTokenDeviceType includes the requested fields of the GraphQL type DeviceType.
type getDeviceTypeByTokenDeviceTypeByTokenDeviceType struct {
	Id              string `json:"id"`
	CreatedAt       string `json:"createdAt"`
	UpdatedAt       string `json:"updatedAt"`
	DeletedAt       string `json:"deletedAt"`
	Token           string `json:"token"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	ImageUrl        string `json:"imageUrl"`
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
	ForegroundColor string `json:"foregroundColor"`
	BorderColor     string `json:"borderColor"`
	Metadata        string `json:"metadata"`
}

// GetId returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.Id, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetId() string { return v.Id }

// GetCreatedAt returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetUpdatedAt() string { return v.UpdatedAt }

// GetDeletedAt returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.DeletedAt, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetDeletedAt() string { return v.DeletedAt }

// GetToken returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.Token, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetToken() string { return v.Token }

// GetName returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.Name, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetName() string { return v.Name }

// GetDescription returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.Description, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetDescription() string {
	return v.Description
}

// GetImageUrl returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.ImageUrl, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetImageUrl() string { return v.ImageUrl }

// GetIcon returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.Icon, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetIcon() string { return v.Icon }

// GetBackgroundColor returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.BackgroundColor, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetBackgroundColor() string {
	return v.BackgroundColor
}

// GetForegroundColor returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.ForegroundColor, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetForegroundColor() string {
	return v.ForegroundColor
}

// GetBorderColor returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.BorderColor, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetBorderColor() string {
	return v.BorderColor
}

// GetMetadata returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.Metadata, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetMetadata() string { return v.Metadata }

// getDeviceTypeByTokenResponse is returned by getDeviceTypeByToken on success.
type getDeviceTypeByTokenResponse struct {
	DeviceTypeByToken getDeviceTypeByTokenDeviceTypeByTokenDeviceType `json:"deviceTypeByToken"`
}

// GetDeviceTypeByToken returns getDeviceTypeByTokenResponse.DeviceTypeByToken, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenResponse) GetDeviceTypeByToken() getDeviceTypeByTokenDeviceTypeByTokenDeviceType {
	return v.DeviceTypeByToken
}

// listDeviceTypesDeviceTypesDeviceTypeSearchResults includes the requested fields of the GraphQL type DeviceTypeSearchResults.
type listDeviceTypesDeviceTypesDeviceTypeSearchResults struct {
	Results    []listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType `json:"results"`
	Pagination listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination          `json:"pagination"`
}

// GetResults returns listDeviceTypesDeviceTypesDeviceTypeSearchResults.Results, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResults) GetResults() []listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType {
	return v.Results
}

// GetPagination returns listDeviceTypesDeviceTypesDeviceTypeSearchResults.Pagination, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResults) GetPagination() listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination {
	return v.Pagination
}

// listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination includes the requested fields of the GraphQL type SearchResultsPagination.
type listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination struct {
	PageStart    int `json:"pageStart"`
	PageEnd      int `json:"pageEnd"`
	TotalRecords int `json:"totalRecords"`
}

// GetPageStart returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination.PageStart, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination) GetPageStart() int {
	return v.PageStart
}

// GetPageEnd returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination.PageEnd, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination) GetPageEnd() int {
	return v.PageEnd
}

// GetTotalRecords returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination.TotalRecords, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination) GetTotalRecords() int {
	return v.TotalRecords
}

// listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType includes the requested fields of the GraphQL type DeviceType.
type listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType struct {
	Id              string `json:"id"`
	CreatedAt       string `json:"createdAt"`
	UpdatedAt       string `json:"updatedAt"`
	DeletedAt       string `json:"deletedAt"`
	Token           string `json:"token"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	ImageUrl        string `json:"imageUrl"`
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
	ForegroundColor string `json:"foregroundColor"`
	BorderColor     string `json:"borderColor"`
	Metadata        string `json:"metadata"`
}

// GetId returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.Id, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetId() string {
	return v.Id
}

// GetCreatedAt returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.CreatedAt, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.UpdatedAt, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetDeletedAt returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.DeletedAt, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetDeletedAt() string {
	return v.DeletedAt
}

// GetToken returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.Token, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetToken() string {
	return v.Token
}

// GetName returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.Name, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetName() string {
	return v.Name
}

// GetDescription returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.Description, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetDescription() string {
	return v.Description
}

// GetImageUrl returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.ImageUrl, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetImageUrl() string {
	return v.ImageUrl
}

// GetIcon returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.Icon, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetIcon() string {
	return v.Icon
}

// GetBackgroundColor returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.BackgroundColor, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetBackgroundColor() string {
	return v.BackgroundColor
}

// GetForegroundColor returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.ForegroundColor, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetForegroundColor() string {
	return v.ForegroundColor
}

// GetBorderColor returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.BorderColor, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetBorderColor() string {
	return v.BorderColor
}

// GetMetadata returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.Metadata, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetMetadata() string {
	return v.Metadata
}

// listDeviceTypesResponse is returned by listDeviceTypes on success.
type listDeviceTypesResponse struct {
	DeviceTypes listDeviceTypesDeviceTypesDeviceTypeSearchResults `json:"deviceTypes"`
}

// GetDeviceTypes returns listDeviceTypesResponse.DeviceTypes, and is useful for accessing the field via an interface.
func (v *listDeviceTypesResponse) GetDeviceTypes() listDeviceTypesDeviceTypesDeviceTypeSearchResults {
	return v.DeviceTypes
}

// listDevicesDevicesDeviceSearchResults includes the requested fields of the GraphQL type DeviceSearchResults.
type listDevicesDevicesDeviceSearchResults struct {
	Results    []listDevicesDevicesDeviceSearchResultsResultsDevice `json:"results"`
	Pagination listDevicesDevicesDeviceSearchResultsPagination      `json:"pagination"`
}

// GetResults returns listDevicesDevicesDeviceSearchResults.Results, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResults) GetResults() []listDevicesDevicesDeviceSearchResultsResultsDevice {
	return v.Results
}

// GetPagination returns listDevicesDevicesDeviceSearchResults.Pagination, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResults) GetPagination() listDevicesDevicesDeviceSearchResultsPagination {
	return v.Pagination
}

// listDevicesDevicesDeviceSearchResultsPagination includes the requested fields of the GraphQL type SearchResultsPagination.
type listDevicesDevicesDeviceSearchResultsPagination struct {
	PageStart    int `json:"pageStart"`
	PageEnd      int `json:"pageEnd"`
	TotalRecords int `json:"totalRecords"`
}

// GetPageStart returns listDevicesDevicesDeviceSearchResultsPagination.PageStart, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsPagination) GetPageStart() int { return v.PageStart }

// GetPageEnd returns listDevicesDevicesDeviceSearchResultsPagination.PageEnd, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsPagination) GetPageEnd() int { return v.PageEnd }

// GetTotalRecords returns listDevicesDevicesDeviceSearchResultsPagination.TotalRecords, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsPagination) GetTotalRecords() int {
	return v.TotalRecords
}

// listDevicesDevicesDeviceSearchResultsResultsDevice includes the requested fields of the GraphQL type Device.
type listDevicesDevicesDeviceSearchResultsResultsDevice struct {
	Id                string                                                                                `json:"id"`
	CreatedAt         string                                                                                `json:"createdAt"`
	UpdatedAt         string                                                                                `json:"updatedAt"`
	DeletedAt         string                                                                                `json:"deletedAt"`
	Token             string                                                                                `json:"token"`
	Name              string                                                                                `json:"name"`
	Description       string                                                                                `json:"description"`
	DeviceType        listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType                          `json:"deviceType"`
	ActiveAssignments []listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment `json:"activeAssignments"`
	Metadata          string                                                                                `json:"metadata"`
}

// GetId returns listDevicesDevicesDeviceSearchResultsResultsDevice.Id, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetId() string { return v.Id }

// GetCreatedAt returns listDevicesDevicesDeviceSearchResultsResultsDevice.CreatedAt, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns listDevicesDevicesDeviceSearchResultsResultsDevice.UpdatedAt, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetDeletedAt returns listDevicesDevicesDeviceSearchResultsResultsDevice.DeletedAt, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetDeletedAt() string {
	return v.DeletedAt
}

// GetToken returns listDevicesDevicesDeviceSearchResultsResultsDevice.Token, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetToken() string { return v.Token }

// GetName returns listDevicesDevicesDeviceSearchResultsResultsDevice.Name, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetName() string { return v.Name }

// GetDescription returns listDevicesDevicesDeviceSearchResultsResultsDevice.Description, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetDescription() string {
	return v.Description
}

// GetDeviceType returns listDevicesDevicesDeviceSearchResultsResultsDevice.DeviceType, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetDeviceType() listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType {
	return v.DeviceType
}

// GetActiveAssignments returns listDevicesDevicesDeviceSearchResultsResultsDevice.ActiveAssignments, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetActiveAssignments() []listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment {
	return v.ActiveAssignments
}

// GetMetadata returns listDevicesDevicesDeviceSearchResultsResultsDevice.Metadata, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetMetadata() string { return v.Metadata }

// listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment includes the requested fields of the GraphQL type DeviceAssignment.
type listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

// GetId returns listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment.Id, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment) GetId() string {
	return v.Id
}

// GetToken returns listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment.Token, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment) GetToken() string {
	return v.Token
}

// listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType includes the requested fields of the GraphQL type DeviceType.
type listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType.Token, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType) GetToken() string {
	return v.Token
}

// GetName returns listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType.Name, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType) GetName() string {
	return v.Name
}

// GetDescription returns listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType.Description, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType) GetDescription() string {
	return v.Description
}

// listDevicesResponse is returned by listDevices on success.
type listDevicesResponse struct {
	Devices listDevicesDevicesDeviceSearchResults `json:"devices"`
}

// GetDevices returns listDevicesResponse.Devices, and is useful for accessing the field via an interface.
func (v *listDevicesResponse) GetDevices() listDevicesDevicesDeviceSearchResults { return v.Devices }

// Create device and return identifiers.
func createDevice(
	ctx context.Context,
	client graphql.Client,
	token string,
	deviceTypeToken string,
	name string,
	description string,
	metadata string,
) (*createDeviceResponse, error) {
	__input := __createDeviceInput{
		Token:           token,
		DeviceTypeToken: deviceTypeToken,
		Name:            name,
		Description:     description,
		Metadata:        metadata,
	}
	var err error

	var retval createDeviceResponse
	err = client.MakeRequest(
		ctx,
		"createDevice",
		`
mutation createDevice ($token: String!, $deviceTypeToken: String!, $name: String, $description: String, $metadata: String) {
	createDevice(request: {token:$token,deviceTypeToken:$deviceTypeToken,name:$name,description:$description,metadata:$metadata}) {
		id
		token
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Create device type and return identifiers.
func createDeviceType(
	ctx context.Context,
	client graphql.Client,
	token string,
	name string,
	description string,
	imageUrl string,
	icon string,
	backgroundColor string,
	foregroundColor string,
	borderColor string,
	metadata string,
) (*createDeviceTypeResponse, error) {
	__input := __createDeviceTypeInput{
		Token:           token,
		Name:            name,
		Description:     description,
		ImageUrl:        imageUrl,
		Icon:            icon,
		BackgroundColor: backgroundColor,
		ForegroundColor: foregroundColor,
		BorderColor:     borderColor,
		Metadata:        metadata,
	}
	var err error

	var retval createDeviceTypeResponse
	err = client.MakeRequest(
		ctx,
		"createDeviceType",
		`
mutation createDeviceType ($token: String!, $name: String, $description: String, $imageUrl: String, $icon: String, $backgroundColor: String, $foregroundColor: String, $borderColor: String, $metadata: String) {
	createDeviceType(request: {token:$token,name:$name,description:$description,imageUrl:$imageUrl,icon:$icon,backgroundColor:$backgroundColor,foregroundColor:$foregroundColor,borderColor:$borderColor,metadata:$metadata}) {
		id
		token
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Get device by unique internal id.
func getDeviceById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*getDeviceByIdResponse, error) {
	__input := __getDeviceByIdInput{
		Id: id,
	}
	var err error

	var retval getDeviceByIdResponse
	err = client.MakeRequest(
		ctx,
		"getDeviceById",
		`
query getDeviceById ($id: ID!) {
	device(id: $id) {
		id
		createdAt
		updatedAt
		deletedAt
		token
		name
		description
		deviceType {
			token
			name
			description
		}
		activeAssignments {
			id
			token
		}
		metadata
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Get device by unique token.
func getDeviceByToken(
	ctx context.Context,
	client graphql.Client,
	token string,
) (*getDeviceByTokenResponse, error) {
	__input := __getDeviceByTokenInput{
		Token: token,
	}
	var err error

	var retval getDeviceByTokenResponse
	err = client.MakeRequest(
		ctx,
		"getDeviceByToken",
		`
query getDeviceByToken ($token: String!) {
	deviceByToken(token: $token) {
		id
		createdAt
		updatedAt
		deletedAt
		token
		name
		description
		deviceType {
			token
			name
			description
		}
		activeAssignments {
			id
			token
		}
		metadata
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Get device type by unique internal id.
func getDeviceTypeById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*getDeviceTypeByIdResponse, error) {
	__input := __getDeviceTypeByIdInput{
		Id: id,
	}
	var err error

	var retval getDeviceTypeByIdResponse
	err = client.MakeRequest(
		ctx,
		"getDeviceTypeById",
		`
query getDeviceTypeById ($id: ID!) {
	deviceType(id: $id) {
		id
		createdAt
		updatedAt
		deletedAt
		token
		name
		description
		imageUrl
		icon
		backgroundColor
		foregroundColor
		borderColor
		metadata
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Get device type by unique token.
func getDeviceTypeByToken(
	ctx context.Context,
	client graphql.Client,
	token string,
) (*getDeviceTypeByTokenResponse, error) {
	__input := __getDeviceTypeByTokenInput{
		Token: token,
	}
	var err error

	var retval getDeviceTypeByTokenResponse
	err = client.MakeRequest(
		ctx,
		"getDeviceTypeByToken",
		`
query getDeviceTypeByToken ($token: String!) {
	deviceTypeByToken(token: $token) {
		id
		createdAt
		updatedAt
		deletedAt
		token
		name
		description
		imageUrl
		icon
		backgroundColor
		foregroundColor
		borderColor
		metadata
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// List device types that match criteria.
func listDeviceTypes(
	ctx context.Context,
	client graphql.Client,
	pageNumber int,
	pageSize int,
) (*listDeviceTypesResponse, error) {
	__input := __listDeviceTypesInput{
		PageNumber: pageNumber,
		PageSize:   pageSize,
	}
	var err error

	var retval listDeviceTypesResponse
	err = client.MakeRequest(
		ctx,
		"listDeviceTypes",
		`
query listDeviceTypes ($pageNumber: Int!, $pageSize: Int!) {
	deviceTypes(criteria: {pageNumber:$pageNumber,pageSize:$pageSize}) {
		results {
			id
			createdAt
			updatedAt
			deletedAt
			token
			name
			description
			imageUrl
			icon
			backgroundColor
			foregroundColor
			borderColor
			metadata
		}
		pagination {
			pageStart
			pageEnd
			totalRecords
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// List devices that match criteria.
func listDevices(
	ctx context.Context,
	client graphql.Client,
	pageNumber int,
	pageSize int,
) (*listDevicesResponse, error) {
	__input := __listDevicesInput{
		PageNumber: pageNumber,
		PageSize:   pageSize,
	}
	var err error

	var retval listDevicesResponse
	err = client.MakeRequest(
		ctx,
		"listDevices",
		`
query listDevices ($pageNumber: Int!, $pageSize: Int!) {
	devices(criteria: {pageNumber:$pageNumber,pageSize:$pageSize}) {
		results {
			id
			createdAt
			updatedAt
			deletedAt
			token
			name
			description
			deviceType {
				token
				name
				description
			}
			activeAssignments {
				id
				token
			}
			metadata
		}
		pagination {
			pageStart
			pageEnd
			totalRecords
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}
