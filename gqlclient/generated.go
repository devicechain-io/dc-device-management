// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gqlclient

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// __createDeviceGroupInput is used internally by genqlient
type __createDeviceGroupInput struct {
	Token           string `json:"token"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	ImageUrl        string `json:"imageUrl"`
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
	ForegroundColor string `json:"foregroundColor"`
	BorderColor     string `json:"borderColor"`
	Metadata        string `json:"metadata"`
}

// GetToken returns __createDeviceGroupInput.Token, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupInput) GetToken() string { return v.Token }

// GetName returns __createDeviceGroupInput.Name, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupInput) GetName() string { return v.Name }

// GetDescription returns __createDeviceGroupInput.Description, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupInput) GetDescription() string { return v.Description }

// GetImageUrl returns __createDeviceGroupInput.ImageUrl, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupInput) GetImageUrl() string { return v.ImageUrl }

// GetIcon returns __createDeviceGroupInput.Icon, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupInput) GetIcon() string { return v.Icon }

// GetBackgroundColor returns __createDeviceGroupInput.BackgroundColor, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupInput) GetBackgroundColor() string { return v.BackgroundColor }

// GetForegroundColor returns __createDeviceGroupInput.ForegroundColor, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupInput) GetForegroundColor() string { return v.ForegroundColor }

// GetBorderColor returns __createDeviceGroupInput.BorderColor, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupInput) GetBorderColor() string { return v.BorderColor }

// GetMetadata returns __createDeviceGroupInput.Metadata, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupInput) GetMetadata() string { return v.Metadata }

// __createDeviceGroupRelationshipInput is used internally by genqlient
type __createDeviceGroupRelationshipInput struct {
	Token            string `json:"token"`
	DeviceGroup      string `json:"deviceGroup"`
	Device           string `json:"device"`
	RelationshipType string `json:"relationshipType"`
}

// GetToken returns __createDeviceGroupRelationshipInput.Token, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupRelationshipInput) GetToken() string { return v.Token }

// GetDeviceGroup returns __createDeviceGroupRelationshipInput.DeviceGroup, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupRelationshipInput) GetDeviceGroup() string { return v.DeviceGroup }

// GetDevice returns __createDeviceGroupRelationshipInput.Device, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupRelationshipInput) GetDevice() string { return v.Device }

// GetRelationshipType returns __createDeviceGroupRelationshipInput.RelationshipType, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupRelationshipInput) GetRelationshipType() string {
	return v.RelationshipType
}

// __createDeviceGroupRelationshipTypeInput is used internally by genqlient
type __createDeviceGroupRelationshipTypeInput struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Metadata    string `json:"metadata"`
}

// GetToken returns __createDeviceGroupRelationshipTypeInput.Token, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupRelationshipTypeInput) GetToken() string { return v.Token }

// GetName returns __createDeviceGroupRelationshipTypeInput.Name, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupRelationshipTypeInput) GetName() string { return v.Name }

// GetDescription returns __createDeviceGroupRelationshipTypeInput.Description, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupRelationshipTypeInput) GetDescription() string { return v.Description }

// GetMetadata returns __createDeviceGroupRelationshipTypeInput.Metadata, and is useful for accessing the field via an interface.
func (v *__createDeviceGroupRelationshipTypeInput) GetMetadata() string { return v.Metadata }

// __createDeviceInput is used internally by genqlient
type __createDeviceInput struct {
	Token           string `json:"token"`
	DeviceTypeToken string `json:"deviceTypeToken"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	Metadata        string `json:"metadata"`
}

// GetToken returns __createDeviceInput.Token, and is useful for accessing the field via an interface.
func (v *__createDeviceInput) GetToken() string { return v.Token }

// GetDeviceTypeToken returns __createDeviceInput.DeviceTypeToken, and is useful for accessing the field via an interface.
func (v *__createDeviceInput) GetDeviceTypeToken() string { return v.DeviceTypeToken }

// GetName returns __createDeviceInput.Name, and is useful for accessing the field via an interface.
func (v *__createDeviceInput) GetName() string { return v.Name }

// GetDescription returns __createDeviceInput.Description, and is useful for accessing the field via an interface.
func (v *__createDeviceInput) GetDescription() string { return v.Description }

// GetMetadata returns __createDeviceInput.Metadata, and is useful for accessing the field via an interface.
func (v *__createDeviceInput) GetMetadata() string { return v.Metadata }

// __createDeviceRelationshipInput is used internally by genqlient
type __createDeviceRelationshipInput struct {
	Token            string `json:"token"`
	SourceDevice     string `json:"sourceDevice"`
	TargetDevice     string `json:"targetDevice"`
	RelationshipType string `json:"relationshipType"`
}

// GetToken returns __createDeviceRelationshipInput.Token, and is useful for accessing the field via an interface.
func (v *__createDeviceRelationshipInput) GetToken() string { return v.Token }

// GetSourceDevice returns __createDeviceRelationshipInput.SourceDevice, and is useful for accessing the field via an interface.
func (v *__createDeviceRelationshipInput) GetSourceDevice() string { return v.SourceDevice }

// GetTargetDevice returns __createDeviceRelationshipInput.TargetDevice, and is useful for accessing the field via an interface.
func (v *__createDeviceRelationshipInput) GetTargetDevice() string { return v.TargetDevice }

// GetRelationshipType returns __createDeviceRelationshipInput.RelationshipType, and is useful for accessing the field via an interface.
func (v *__createDeviceRelationshipInput) GetRelationshipType() string { return v.RelationshipType }

// __createDeviceRelationshipTypeInput is used internally by genqlient
type __createDeviceRelationshipTypeInput struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Metadata    string `json:"metadata"`
}

// GetToken returns __createDeviceRelationshipTypeInput.Token, and is useful for accessing the field via an interface.
func (v *__createDeviceRelationshipTypeInput) GetToken() string { return v.Token }

// GetName returns __createDeviceRelationshipTypeInput.Name, and is useful for accessing the field via an interface.
func (v *__createDeviceRelationshipTypeInput) GetName() string { return v.Name }

// GetDescription returns __createDeviceRelationshipTypeInput.Description, and is useful for accessing the field via an interface.
func (v *__createDeviceRelationshipTypeInput) GetDescription() string { return v.Description }

// GetMetadata returns __createDeviceRelationshipTypeInput.Metadata, and is useful for accessing the field via an interface.
func (v *__createDeviceRelationshipTypeInput) GetMetadata() string { return v.Metadata }

// __createDeviceTypeInput is used internally by genqlient
type __createDeviceTypeInput struct {
	Token           string `json:"token"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	ImageUrl        string `json:"imageUrl"`
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
	ForegroundColor string `json:"foregroundColor"`
	BorderColor     string `json:"borderColor"`
	Metadata        string `json:"metadata"`
}

// GetToken returns __createDeviceTypeInput.Token, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetToken() string { return v.Token }

// GetName returns __createDeviceTypeInput.Name, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetName() string { return v.Name }

// GetDescription returns __createDeviceTypeInput.Description, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetDescription() string { return v.Description }

// GetImageUrl returns __createDeviceTypeInput.ImageUrl, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetImageUrl() string { return v.ImageUrl }

// GetIcon returns __createDeviceTypeInput.Icon, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetIcon() string { return v.Icon }

// GetBackgroundColor returns __createDeviceTypeInput.BackgroundColor, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetBackgroundColor() string { return v.BackgroundColor }

// GetForegroundColor returns __createDeviceTypeInput.ForegroundColor, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetForegroundColor() string { return v.ForegroundColor }

// GetBorderColor returns __createDeviceTypeInput.BorderColor, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetBorderColor() string { return v.BorderColor }

// GetMetadata returns __createDeviceTypeInput.Metadata, and is useful for accessing the field via an interface.
func (v *__createDeviceTypeInput) GetMetadata() string { return v.Metadata }

// __getDeviceByTokenInput is used internally by genqlient
type __getDeviceByTokenInput struct {
	Token string `json:"token"`
}

// GetToken returns __getDeviceByTokenInput.Token, and is useful for accessing the field via an interface.
func (v *__getDeviceByTokenInput) GetToken() string { return v.Token }

// __getDeviceGroupByTokenInput is used internally by genqlient
type __getDeviceGroupByTokenInput struct {
	Token string `json:"token"`
}

// GetToken returns __getDeviceGroupByTokenInput.Token, and is useful for accessing the field via an interface.
func (v *__getDeviceGroupByTokenInput) GetToken() string { return v.Token }

// __getDeviceGroupRelationshipByTokenInput is used internally by genqlient
type __getDeviceGroupRelationshipByTokenInput struct {
	Token string `json:"token"`
}

// GetToken returns __getDeviceGroupRelationshipByTokenInput.Token, and is useful for accessing the field via an interface.
func (v *__getDeviceGroupRelationshipByTokenInput) GetToken() string { return v.Token }

// __getDeviceGroupRelationshipTypeByTokenInput is used internally by genqlient
type __getDeviceGroupRelationshipTypeByTokenInput struct {
	Token string `json:"token"`
}

// GetToken returns __getDeviceGroupRelationshipTypeByTokenInput.Token, and is useful for accessing the field via an interface.
func (v *__getDeviceGroupRelationshipTypeByTokenInput) GetToken() string { return v.Token }

// __getDeviceRelationshipByTokenInput is used internally by genqlient
type __getDeviceRelationshipByTokenInput struct {
	Token string `json:"token"`
}

// GetToken returns __getDeviceRelationshipByTokenInput.Token, and is useful for accessing the field via an interface.
func (v *__getDeviceRelationshipByTokenInput) GetToken() string { return v.Token }

// __getDeviceRelationshipTypeByTokenInput is used internally by genqlient
type __getDeviceRelationshipTypeByTokenInput struct {
	Token string `json:"token"`
}

// GetToken returns __getDeviceRelationshipTypeByTokenInput.Token, and is useful for accessing the field via an interface.
func (v *__getDeviceRelationshipTypeByTokenInput) GetToken() string { return v.Token }

// __getDeviceTypeByTokenInput is used internally by genqlient
type __getDeviceTypeByTokenInput struct {
	Token string `json:"token"`
}

// GetToken returns __getDeviceTypeByTokenInput.Token, and is useful for accessing the field via an interface.
func (v *__getDeviceTypeByTokenInput) GetToken() string { return v.Token }

// __listDeviceGroupRelationshipTypesInput is used internally by genqlient
type __listDeviceGroupRelationshipTypesInput struct {
	PageNumber int `json:"pageNumber"`
	PageSize   int `json:"pageSize"`
}

// GetPageNumber returns __listDeviceGroupRelationshipTypesInput.PageNumber, and is useful for accessing the field via an interface.
func (v *__listDeviceGroupRelationshipTypesInput) GetPageNumber() int { return v.PageNumber }

// GetPageSize returns __listDeviceGroupRelationshipTypesInput.PageSize, and is useful for accessing the field via an interface.
func (v *__listDeviceGroupRelationshipTypesInput) GetPageSize() int { return v.PageSize }

// __listDeviceGroupRelationshipsInput is used internally by genqlient
type __listDeviceGroupRelationshipsInput struct {
	PageNumber int `json:"pageNumber"`
	PageSize   int `json:"pageSize"`
}

// GetPageNumber returns __listDeviceGroupRelationshipsInput.PageNumber, and is useful for accessing the field via an interface.
func (v *__listDeviceGroupRelationshipsInput) GetPageNumber() int { return v.PageNumber }

// GetPageSize returns __listDeviceGroupRelationshipsInput.PageSize, and is useful for accessing the field via an interface.
func (v *__listDeviceGroupRelationshipsInput) GetPageSize() int { return v.PageSize }

// __listDeviceGroupsInput is used internally by genqlient
type __listDeviceGroupsInput struct {
	PageNumber int `json:"pageNumber"`
	PageSize   int `json:"pageSize"`
}

// GetPageNumber returns __listDeviceGroupsInput.PageNumber, and is useful for accessing the field via an interface.
func (v *__listDeviceGroupsInput) GetPageNumber() int { return v.PageNumber }

// GetPageSize returns __listDeviceGroupsInput.PageSize, and is useful for accessing the field via an interface.
func (v *__listDeviceGroupsInput) GetPageSize() int { return v.PageSize }

// __listDeviceRelationshipTypesInput is used internally by genqlient
type __listDeviceRelationshipTypesInput struct {
	PageNumber int `json:"pageNumber"`
	PageSize   int `json:"pageSize"`
}

// GetPageNumber returns __listDeviceRelationshipTypesInput.PageNumber, and is useful for accessing the field via an interface.
func (v *__listDeviceRelationshipTypesInput) GetPageNumber() int { return v.PageNumber }

// GetPageSize returns __listDeviceRelationshipTypesInput.PageSize, and is useful for accessing the field via an interface.
func (v *__listDeviceRelationshipTypesInput) GetPageSize() int { return v.PageSize }

// __listDeviceRelationshipsInput is used internally by genqlient
type __listDeviceRelationshipsInput struct {
	PageNumber int `json:"pageNumber"`
	PageSize   int `json:"pageSize"`
}

// GetPageNumber returns __listDeviceRelationshipsInput.PageNumber, and is useful for accessing the field via an interface.
func (v *__listDeviceRelationshipsInput) GetPageNumber() int { return v.PageNumber }

// GetPageSize returns __listDeviceRelationshipsInput.PageSize, and is useful for accessing the field via an interface.
func (v *__listDeviceRelationshipsInput) GetPageSize() int { return v.PageSize }

// __listDeviceTypesInput is used internally by genqlient
type __listDeviceTypesInput struct {
	PageNumber int `json:"pageNumber"`
	PageSize   int `json:"pageSize"`
}

// GetPageNumber returns __listDeviceTypesInput.PageNumber, and is useful for accessing the field via an interface.
func (v *__listDeviceTypesInput) GetPageNumber() int { return v.PageNumber }

// GetPageSize returns __listDeviceTypesInput.PageSize, and is useful for accessing the field via an interface.
func (v *__listDeviceTypesInput) GetPageSize() int { return v.PageSize }

// __listDevicesInput is used internally by genqlient
type __listDevicesInput struct {
	PageNumber int `json:"pageNumber"`
	PageSize   int `json:"pageSize"`
}

// GetPageNumber returns __listDevicesInput.PageNumber, and is useful for accessing the field via an interface.
func (v *__listDevicesInput) GetPageNumber() int { return v.PageNumber }

// GetPageSize returns __listDevicesInput.PageSize, and is useful for accessing the field via an interface.
func (v *__listDevicesInput) GetPageSize() int { return v.PageSize }

// createDeviceCreateDevice includes the requested fields of the GraphQL type Device.
type createDeviceCreateDevice struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

// GetId returns createDeviceCreateDevice.Id, and is useful for accessing the field via an interface.
func (v *createDeviceCreateDevice) GetId() string { return v.Id }

// GetToken returns createDeviceCreateDevice.Token, and is useful for accessing the field via an interface.
func (v *createDeviceCreateDevice) GetToken() string { return v.Token }

// createDeviceGroupCreateDeviceGroup includes the requested fields of the GraphQL type DeviceGroup.
type createDeviceGroupCreateDeviceGroup struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

// GetId returns createDeviceGroupCreateDeviceGroup.Id, and is useful for accessing the field via an interface.
func (v *createDeviceGroupCreateDeviceGroup) GetId() string { return v.Id }

// GetToken returns createDeviceGroupCreateDeviceGroup.Token, and is useful for accessing the field via an interface.
func (v *createDeviceGroupCreateDeviceGroup) GetToken() string { return v.Token }

// createDeviceGroupRelationshipCreateDeviceGroupRelationship includes the requested fields of the GraphQL type DeviceGroupRelationship.
type createDeviceGroupRelationshipCreateDeviceGroupRelationship struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

// GetId returns createDeviceGroupRelationshipCreateDeviceGroupRelationship.Id, and is useful for accessing the field via an interface.
func (v *createDeviceGroupRelationshipCreateDeviceGroupRelationship) GetId() string { return v.Id }

// GetToken returns createDeviceGroupRelationshipCreateDeviceGroupRelationship.Token, and is useful for accessing the field via an interface.
func (v *createDeviceGroupRelationshipCreateDeviceGroupRelationship) GetToken() string {
	return v.Token
}

// createDeviceGroupRelationshipResponse is returned by createDeviceGroupRelationship on success.
type createDeviceGroupRelationshipResponse struct {
	CreateDeviceGroupRelationship createDeviceGroupRelationshipCreateDeviceGroupRelationship `json:"createDeviceGroupRelationship"`
}

// GetCreateDeviceGroupRelationship returns createDeviceGroupRelationshipResponse.CreateDeviceGroupRelationship, and is useful for accessing the field via an interface.
func (v *createDeviceGroupRelationshipResponse) GetCreateDeviceGroupRelationship() createDeviceGroupRelationshipCreateDeviceGroupRelationship {
	return v.CreateDeviceGroupRelationship
}

// createDeviceGroupRelationshipTypeCreateDeviceGroupRelationshipType includes the requested fields of the GraphQL type DeviceGroupRelationshipType.
type createDeviceGroupRelationshipTypeCreateDeviceGroupRelationshipType struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

// GetId returns createDeviceGroupRelationshipTypeCreateDeviceGroupRelationshipType.Id, and is useful for accessing the field via an interface.
func (v *createDeviceGroupRelationshipTypeCreateDeviceGroupRelationshipType) GetId() string {
	return v.Id
}

// GetToken returns createDeviceGroupRelationshipTypeCreateDeviceGroupRelationshipType.Token, and is useful for accessing the field via an interface.
func (v *createDeviceGroupRelationshipTypeCreateDeviceGroupRelationshipType) GetToken() string {
	return v.Token
}

// createDeviceGroupRelationshipTypeResponse is returned by createDeviceGroupRelationshipType on success.
type createDeviceGroupRelationshipTypeResponse struct {
	CreateDeviceGroupRelationshipType createDeviceGroupRelationshipTypeCreateDeviceGroupRelationshipType `json:"createDeviceGroupRelationshipType"`
}

// GetCreateDeviceGroupRelationshipType returns createDeviceGroupRelationshipTypeResponse.CreateDeviceGroupRelationshipType, and is useful for accessing the field via an interface.
func (v *createDeviceGroupRelationshipTypeResponse) GetCreateDeviceGroupRelationshipType() createDeviceGroupRelationshipTypeCreateDeviceGroupRelationshipType {
	return v.CreateDeviceGroupRelationshipType
}

// createDeviceGroupResponse is returned by createDeviceGroup on success.
type createDeviceGroupResponse struct {
	CreateDeviceGroup createDeviceGroupCreateDeviceGroup `json:"createDeviceGroup"`
}

// GetCreateDeviceGroup returns createDeviceGroupResponse.CreateDeviceGroup, and is useful for accessing the field via an interface.
func (v *createDeviceGroupResponse) GetCreateDeviceGroup() createDeviceGroupCreateDeviceGroup {
	return v.CreateDeviceGroup
}

// createDeviceRelationshipCreateDeviceRelationship includes the requested fields of the GraphQL type DeviceRelationship.
type createDeviceRelationshipCreateDeviceRelationship struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

// GetId returns createDeviceRelationshipCreateDeviceRelationship.Id, and is useful for accessing the field via an interface.
func (v *createDeviceRelationshipCreateDeviceRelationship) GetId() string { return v.Id }

// GetToken returns createDeviceRelationshipCreateDeviceRelationship.Token, and is useful for accessing the field via an interface.
func (v *createDeviceRelationshipCreateDeviceRelationship) GetToken() string { return v.Token }

// createDeviceRelationshipResponse is returned by createDeviceRelationship on success.
type createDeviceRelationshipResponse struct {
	CreateDeviceRelationship createDeviceRelationshipCreateDeviceRelationship `json:"createDeviceRelationship"`
}

// GetCreateDeviceRelationship returns createDeviceRelationshipResponse.CreateDeviceRelationship, and is useful for accessing the field via an interface.
func (v *createDeviceRelationshipResponse) GetCreateDeviceRelationship() createDeviceRelationshipCreateDeviceRelationship {
	return v.CreateDeviceRelationship
}

// createDeviceRelationshipTypeCreateDeviceRelationshipType includes the requested fields of the GraphQL type DeviceRelationshipType.
type createDeviceRelationshipTypeCreateDeviceRelationshipType struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

// GetId returns createDeviceRelationshipTypeCreateDeviceRelationshipType.Id, and is useful for accessing the field via an interface.
func (v *createDeviceRelationshipTypeCreateDeviceRelationshipType) GetId() string { return v.Id }

// GetToken returns createDeviceRelationshipTypeCreateDeviceRelationshipType.Token, and is useful for accessing the field via an interface.
func (v *createDeviceRelationshipTypeCreateDeviceRelationshipType) GetToken() string { return v.Token }

// createDeviceRelationshipTypeResponse is returned by createDeviceRelationshipType on success.
type createDeviceRelationshipTypeResponse struct {
	CreateDeviceRelationshipType createDeviceRelationshipTypeCreateDeviceRelationshipType `json:"createDeviceRelationshipType"`
}

// GetCreateDeviceRelationshipType returns createDeviceRelationshipTypeResponse.CreateDeviceRelationshipType, and is useful for accessing the field via an interface.
func (v *createDeviceRelationshipTypeResponse) GetCreateDeviceRelationshipType() createDeviceRelationshipTypeCreateDeviceRelationshipType {
	return v.CreateDeviceRelationshipType
}

// createDeviceResponse is returned by createDevice on success.
type createDeviceResponse struct {
	CreateDevice createDeviceCreateDevice `json:"createDevice"`
}

// GetCreateDevice returns createDeviceResponse.CreateDevice, and is useful for accessing the field via an interface.
func (v *createDeviceResponse) GetCreateDevice() createDeviceCreateDevice { return v.CreateDevice }

// createDeviceTypeCreateDeviceType includes the requested fields of the GraphQL type DeviceType.
type createDeviceTypeCreateDeviceType struct {
	Id    string `json:"id"`
	Token string `json:"token"`
}

// GetId returns createDeviceTypeCreateDeviceType.Id, and is useful for accessing the field via an interface.
func (v *createDeviceTypeCreateDeviceType) GetId() string { return v.Id }

// GetToken returns createDeviceTypeCreateDeviceType.Token, and is useful for accessing the field via an interface.
func (v *createDeviceTypeCreateDeviceType) GetToken() string { return v.Token }

// createDeviceTypeResponse is returned by createDeviceType on success.
type createDeviceTypeResponse struct {
	CreateDeviceType createDeviceTypeCreateDeviceType `json:"createDeviceType"`
}

// GetCreateDeviceType returns createDeviceTypeResponse.CreateDeviceType, and is useful for accessing the field via an interface.
func (v *createDeviceTypeResponse) GetCreateDeviceType() createDeviceTypeCreateDeviceType {
	return v.CreateDeviceType
}

// getDeviceByTokenDeviceByTokenDevice includes the requested fields of the GraphQL type Device.
type getDeviceByTokenDeviceByTokenDevice struct {
	Id                string                                                                 `json:"id"`
	CreatedAt         string                                                                 `json:"createdAt"`
	UpdatedAt         string                                                                 `json:"updatedAt"`
	DeletedAt         string                                                                 `json:"deletedAt"`
	Token             string                                                                 `json:"token"`
	Name              string                                                                 `json:"name"`
	Description       string                                                                 `json:"description"`
	DeviceType        getDeviceByTokenDeviceByTokenDeviceDeviceType                          `json:"deviceType"`
	ActiveAssignments []getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment `json:"activeAssignments"`
	Metadata          string                                                                 `json:"metadata"`
}

// GetId returns getDeviceByTokenDeviceByTokenDevice.Id, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetId() string { return v.Id }

// GetCreatedAt returns getDeviceByTokenDeviceByTokenDevice.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns getDeviceByTokenDeviceByTokenDevice.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetUpdatedAt() string { return v.UpdatedAt }

// GetDeletedAt returns getDeviceByTokenDeviceByTokenDevice.DeletedAt, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetDeletedAt() string { return v.DeletedAt }

// GetToken returns getDeviceByTokenDeviceByTokenDevice.Token, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetToken() string { return v.Token }

// GetName returns getDeviceByTokenDeviceByTokenDevice.Name, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetName() string { return v.Name }

// GetDescription returns getDeviceByTokenDeviceByTokenDevice.Description, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetDescription() string { return v.Description }

// GetDeviceType returns getDeviceByTokenDeviceByTokenDevice.DeviceType, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetDeviceType() getDeviceByTokenDeviceByTokenDeviceDeviceType {
	return v.DeviceType
}

// GetActiveAssignments returns getDeviceByTokenDeviceByTokenDevice.ActiveAssignments, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetActiveAssignments() []getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment {
	return v.ActiveAssignments
}

// GetMetadata returns getDeviceByTokenDeviceByTokenDevice.Metadata, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDevice) GetMetadata() string { return v.Metadata }

// getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment includes the requested fields of the GraphQL type DeviceAssignment.
type getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment struct {
	Token string `json:"token"`
}

// GetToken returns getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment.Token, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDeviceActiveAssignmentsDeviceAssignment) GetToken() string {
	return v.Token
}

// getDeviceByTokenDeviceByTokenDeviceDeviceType includes the requested fields of the GraphQL type DeviceType.
type getDeviceByTokenDeviceByTokenDeviceDeviceType struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns getDeviceByTokenDeviceByTokenDeviceDeviceType.Token, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDeviceDeviceType) GetToken() string { return v.Token }

// GetName returns getDeviceByTokenDeviceByTokenDeviceDeviceType.Name, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDeviceDeviceType) GetName() string { return v.Name }

// GetDescription returns getDeviceByTokenDeviceByTokenDeviceDeviceType.Description, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenDeviceByTokenDeviceDeviceType) GetDescription() string { return v.Description }

// getDeviceByTokenResponse is returned by getDeviceByToken on success.
type getDeviceByTokenResponse struct {
	DeviceByToken getDeviceByTokenDeviceByTokenDevice `json:"deviceByToken"`
}

// GetDeviceByToken returns getDeviceByTokenResponse.DeviceByToken, and is useful for accessing the field via an interface.
func (v *getDeviceByTokenResponse) GetDeviceByToken() getDeviceByTokenDeviceByTokenDevice {
	return v.DeviceByToken
}

// getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup includes the requested fields of the GraphQL type DeviceGroup.
type getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup struct {
	Id              string `json:"id"`
	CreatedAt       string `json:"createdAt"`
	UpdatedAt       string `json:"updatedAt"`
	DeletedAt       string `json:"deletedAt"`
	Token           string `json:"token"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	ImageUrl        string `json:"imageUrl"`
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
	ForegroundColor string `json:"foregroundColor"`
	BorderColor     string `json:"borderColor"`
	Metadata        string `json:"metadata"`
}

// GetId returns getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup.Id, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup) GetId() string { return v.Id }

// GetCreatedAt returns getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetDeletedAt returns getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup.DeletedAt, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup) GetDeletedAt() string {
	return v.DeletedAt
}

// GetToken returns getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup.Token, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup) GetToken() string { return v.Token }

// GetName returns getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup.Name, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup) GetName() string { return v.Name }

// GetDescription returns getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup.Description, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup) GetDescription() string {
	return v.Description
}

// GetImageUrl returns getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup.ImageUrl, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup) GetImageUrl() string { return v.ImageUrl }

// GetIcon returns getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup.Icon, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup) GetIcon() string { return v.Icon }

// GetBackgroundColor returns getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup.BackgroundColor, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup) GetBackgroundColor() string {
	return v.BackgroundColor
}

// GetForegroundColor returns getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup.ForegroundColor, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup) GetForegroundColor() string {
	return v.ForegroundColor
}

// GetBorderColor returns getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup.BorderColor, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup) GetBorderColor() string {
	return v.BorderColor
}

// GetMetadata returns getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup.Metadata, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup) GetMetadata() string { return v.Metadata }

// getDeviceGroupByTokenResponse is returned by getDeviceGroupByToken on success.
type getDeviceGroupByTokenResponse struct {
	DeviceGroupByToken getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup `json:"deviceGroupByToken"`
}

// GetDeviceGroupByToken returns getDeviceGroupByTokenResponse.DeviceGroupByToken, and is useful for accessing the field via an interface.
func (v *getDeviceGroupByTokenResponse) GetDeviceGroupByToken() getDeviceGroupByTokenDeviceGroupByTokenDeviceGroup {
	return v.DeviceGroupByToken
}

// getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship includes the requested fields of the GraphQL type DeviceGroupRelationship.
type getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship struct {
	Id               string                                                                                                                            `json:"id"`
	CreatedAt        string                                                                                                                            `json:"createdAt"`
	UpdatedAt        string                                                                                                                            `json:"updatedAt"`
	DeletedAt        string                                                                                                                            `json:"deletedAt"`
	Token            string                                                                                                                            `json:"token"`
	DeviceGroup      getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDeviceGroup                                 `json:"deviceGroup"`
	Device           getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDevice                                      `json:"device"`
	RelationshipType getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType `json:"relationshipType"`
	Metadata         string                                                                                                                            `json:"metadata"`
}

// GetId returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship.Id, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship) GetId() string {
	return v.Id
}

// GetCreatedAt returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetDeletedAt returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship.DeletedAt, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship) GetDeletedAt() string {
	return v.DeletedAt
}

// GetToken returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship.Token, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship) GetToken() string {
	return v.Token
}

// GetDeviceGroup returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship.DeviceGroup, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship) GetDeviceGroup() getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDeviceGroup {
	return v.DeviceGroup
}

// GetDevice returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship.Device, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship) GetDevice() getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDevice {
	return v.Device
}

// GetRelationshipType returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship.RelationshipType, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship) GetRelationshipType() getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType {
	return v.RelationshipType
}

// GetMetadata returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship.Metadata, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship) GetMetadata() string {
	return v.Metadata
}

// getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDevice includes the requested fields of the GraphQL type Device.
type getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDevice struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDevice.Token, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDevice) GetToken() string {
	return v.Token
}

// GetName returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDevice.Name, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDevice) GetName() string {
	return v.Name
}

// GetDescription returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDevice.Description, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDevice) GetDescription() string {
	return v.Description
}

// getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDeviceGroup includes the requested fields of the GraphQL type DeviceGroup.
type getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDeviceGroup struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDeviceGroup.Token, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDeviceGroup) GetToken() string {
	return v.Token
}

// GetName returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDeviceGroup.Name, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDeviceGroup) GetName() string {
	return v.Name
}

// GetDescription returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDeviceGroup.Description, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipDeviceGroup) GetDescription() string {
	return v.Description
}

// getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType includes the requested fields of the GraphQL type DeviceGroupRelationshipType.
type getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType.Token, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType) GetToken() string {
	return v.Token
}

// GetName returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType.Name, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType) GetName() string {
	return v.Name
}

// GetDescription returns getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType.Description, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType) GetDescription() string {
	return v.Description
}

// getDeviceGroupRelationshipByTokenResponse is returned by getDeviceGroupRelationshipByToken on success.
type getDeviceGroupRelationshipByTokenResponse struct {
	DeviceGroupRelationshipByToken getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship `json:"deviceGroupRelationshipByToken"`
}

// GetDeviceGroupRelationshipByToken returns getDeviceGroupRelationshipByTokenResponse.DeviceGroupRelationshipByToken, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipByTokenResponse) GetDeviceGroupRelationshipByToken() getDeviceGroupRelationshipByTokenDeviceGroupRelationshipByTokenDeviceGroupRelationship {
	return v.DeviceGroupRelationshipByToken
}

// getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType includes the requested fields of the GraphQL type DeviceGroupRelationshipType.
type getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType struct {
	Id          string `json:"id"`
	CreatedAt   string `json:"createdAt"`
	UpdatedAt   string `json:"updatedAt"`
	DeletedAt   string `json:"deletedAt"`
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Metadata    string `json:"metadata"`
}

// GetId returns getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType.Id, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType) GetId() string {
	return v.Id
}

// GetCreatedAt returns getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetDeletedAt returns getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType.DeletedAt, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType) GetDeletedAt() string {
	return v.DeletedAt
}

// GetToken returns getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType.Token, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType) GetToken() string {
	return v.Token
}

// GetName returns getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType.Name, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType) GetName() string {
	return v.Name
}

// GetDescription returns getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType.Description, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType) GetDescription() string {
	return v.Description
}

// GetMetadata returns getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType.Metadata, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType) GetMetadata() string {
	return v.Metadata
}

// getDeviceGroupRelationshipTypeByTokenResponse is returned by getDeviceGroupRelationshipTypeByToken on success.
type getDeviceGroupRelationshipTypeByTokenResponse struct {
	DeviceGroupRelationshipTypeByToken getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType `json:"deviceGroupRelationshipTypeByToken"`
}

// GetDeviceGroupRelationshipTypeByToken returns getDeviceGroupRelationshipTypeByTokenResponse.DeviceGroupRelationshipTypeByToken, and is useful for accessing the field via an interface.
func (v *getDeviceGroupRelationshipTypeByTokenResponse) GetDeviceGroupRelationshipTypeByToken() getDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipTypeByTokenDeviceGroupRelationshipType {
	return v.DeviceGroupRelationshipTypeByToken
}

// getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship includes the requested fields of the GraphQL type DeviceRelationship.
type getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship struct {
	Id               string                                                                                                        `json:"id"`
	CreatedAt        string                                                                                                        `json:"createdAt"`
	UpdatedAt        string                                                                                                        `json:"updatedAt"`
	DeletedAt        string                                                                                                        `json:"deletedAt"`
	Token            string                                                                                                        `json:"token"`
	SourceDevice     getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipSourceDevice                           `json:"sourceDevice"`
	TargetDevice     getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipTargetDevice                           `json:"targetDevice"`
	RelationshipType getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipRelationshipTypeDeviceRelationshipType `json:"relationshipType"`
	Metadata         string                                                                                                        `json:"metadata"`
}

// GetId returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship.Id, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship) GetId() string {
	return v.Id
}

// GetCreatedAt returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetDeletedAt returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship.DeletedAt, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship) GetDeletedAt() string {
	return v.DeletedAt
}

// GetToken returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship.Token, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship) GetToken() string {
	return v.Token
}

// GetSourceDevice returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship.SourceDevice, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship) GetSourceDevice() getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipSourceDevice {
	return v.SourceDevice
}

// GetTargetDevice returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship.TargetDevice, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship) GetTargetDevice() getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipTargetDevice {
	return v.TargetDevice
}

// GetRelationshipType returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship.RelationshipType, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship) GetRelationshipType() getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipRelationshipTypeDeviceRelationshipType {
	return v.RelationshipType
}

// GetMetadata returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship.Metadata, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship) GetMetadata() string {
	return v.Metadata
}

// getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipRelationshipTypeDeviceRelationshipType includes the requested fields of the GraphQL type DeviceRelationshipType.
type getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipRelationshipTypeDeviceRelationshipType struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipRelationshipTypeDeviceRelationshipType.Token, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipRelationshipTypeDeviceRelationshipType) GetToken() string {
	return v.Token
}

// GetName returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipRelationshipTypeDeviceRelationshipType.Name, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipRelationshipTypeDeviceRelationshipType) GetName() string {
	return v.Name
}

// GetDescription returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipRelationshipTypeDeviceRelationshipType.Description, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipRelationshipTypeDeviceRelationshipType) GetDescription() string {
	return v.Description
}

// getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipSourceDevice includes the requested fields of the GraphQL type Device.
type getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipSourceDevice struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipSourceDevice.Token, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipSourceDevice) GetToken() string {
	return v.Token
}

// GetName returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipSourceDevice.Name, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipSourceDevice) GetName() string {
	return v.Name
}

// GetDescription returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipSourceDevice.Description, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipSourceDevice) GetDescription() string {
	return v.Description
}

// getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipTargetDevice includes the requested fields of the GraphQL type Device.
type getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipTargetDevice struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipTargetDevice.Token, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipTargetDevice) GetToken() string {
	return v.Token
}

// GetName returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipTargetDevice.Name, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipTargetDevice) GetName() string {
	return v.Name
}

// GetDescription returns getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipTargetDevice.Description, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationshipTargetDevice) GetDescription() string {
	return v.Description
}

// getDeviceRelationshipByTokenResponse is returned by getDeviceRelationshipByToken on success.
type getDeviceRelationshipByTokenResponse struct {
	DeviceRelationshipByToken getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship `json:"deviceRelationshipByToken"`
}

// GetDeviceRelationshipByToken returns getDeviceRelationshipByTokenResponse.DeviceRelationshipByToken, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipByTokenResponse) GetDeviceRelationshipByToken() getDeviceRelationshipByTokenDeviceRelationshipByTokenDeviceRelationship {
	return v.DeviceRelationshipByToken
}

// getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType includes the requested fields of the GraphQL type DeviceRelationshipType.
type getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType struct {
	Id          string `json:"id"`
	CreatedAt   string `json:"createdAt"`
	UpdatedAt   string `json:"updatedAt"`
	DeletedAt   string `json:"deletedAt"`
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Metadata    string `json:"metadata"`
}

// GetId returns getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType.Id, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType) GetId() string {
	return v.Id
}

// GetCreatedAt returns getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetDeletedAt returns getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType.DeletedAt, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType) GetDeletedAt() string {
	return v.DeletedAt
}

// GetToken returns getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType.Token, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType) GetToken() string {
	return v.Token
}

// GetName returns getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType.Name, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType) GetName() string {
	return v.Name
}

// GetDescription returns getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType.Description, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType) GetDescription() string {
	return v.Description
}

// GetMetadata returns getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType.Metadata, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType) GetMetadata() string {
	return v.Metadata
}

// getDeviceRelationshipTypeByTokenResponse is returned by getDeviceRelationshipTypeByToken on success.
type getDeviceRelationshipTypeByTokenResponse struct {
	DeviceRelationshipTypeByToken getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType `json:"deviceRelationshipTypeByToken"`
}

// GetDeviceRelationshipTypeByToken returns getDeviceRelationshipTypeByTokenResponse.DeviceRelationshipTypeByToken, and is useful for accessing the field via an interface.
func (v *getDeviceRelationshipTypeByTokenResponse) GetDeviceRelationshipTypeByToken() getDeviceRelationshipTypeByTokenDeviceRelationshipTypeByTokenDeviceRelationshipType {
	return v.DeviceRelationshipTypeByToken
}

// getDeviceTypeByTokenDeviceTypeByTokenDeviceType includes the requested fields of the GraphQL type DeviceType.
type getDeviceTypeByTokenDeviceTypeByTokenDeviceType struct {
	Id              string `json:"id"`
	CreatedAt       string `json:"createdAt"`
	UpdatedAt       string `json:"updatedAt"`
	DeletedAt       string `json:"deletedAt"`
	Token           string `json:"token"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	ImageUrl        string `json:"imageUrl"`
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
	ForegroundColor string `json:"foregroundColor"`
	BorderColor     string `json:"borderColor"`
	Metadata        string `json:"metadata"`
}

// GetId returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.Id, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetId() string { return v.Id }

// GetCreatedAt returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.CreatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetCreatedAt() string { return v.CreatedAt }

// GetUpdatedAt returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.UpdatedAt, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetUpdatedAt() string { return v.UpdatedAt }

// GetDeletedAt returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.DeletedAt, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetDeletedAt() string { return v.DeletedAt }

// GetToken returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.Token, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetToken() string { return v.Token }

// GetName returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.Name, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetName() string { return v.Name }

// GetDescription returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.Description, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetDescription() string {
	return v.Description
}

// GetImageUrl returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.ImageUrl, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetImageUrl() string { return v.ImageUrl }

// GetIcon returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.Icon, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetIcon() string { return v.Icon }

// GetBackgroundColor returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.BackgroundColor, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetBackgroundColor() string {
	return v.BackgroundColor
}

// GetForegroundColor returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.ForegroundColor, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetForegroundColor() string {
	return v.ForegroundColor
}

// GetBorderColor returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.BorderColor, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetBorderColor() string {
	return v.BorderColor
}

// GetMetadata returns getDeviceTypeByTokenDeviceTypeByTokenDeviceType.Metadata, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenDeviceTypeByTokenDeviceType) GetMetadata() string { return v.Metadata }

// getDeviceTypeByTokenResponse is returned by getDeviceTypeByToken on success.
type getDeviceTypeByTokenResponse struct {
	DeviceTypeByToken getDeviceTypeByTokenDeviceTypeByTokenDeviceType `json:"deviceTypeByToken"`
}

// GetDeviceTypeByToken returns getDeviceTypeByTokenResponse.DeviceTypeByToken, and is useful for accessing the field via an interface.
func (v *getDeviceTypeByTokenResponse) GetDeviceTypeByToken() getDeviceTypeByTokenDeviceTypeByTokenDeviceType {
	return v.DeviceTypeByToken
}

// listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResults includes the requested fields of the GraphQL type DeviceGroupRelationshipTypeSearchResults.
type listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResults struct {
	Results    []listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType `json:"results"`
	Pagination listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsPagination                           `json:"pagination"`
}

// GetResults returns listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResults.Results, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResults) GetResults() []listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType {
	return v.Results
}

// GetPagination returns listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResults.Pagination, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResults) GetPagination() listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsPagination {
	return v.Pagination
}

// listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsPagination includes the requested fields of the GraphQL type SearchResultsPagination.
type listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsPagination struct {
	PageStart    int `json:"pageStart"`
	PageEnd      int `json:"pageEnd"`
	TotalRecords int `json:"totalRecords"`
}

// GetPageStart returns listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsPagination.PageStart, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsPagination) GetPageStart() int {
	return v.PageStart
}

// GetPageEnd returns listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsPagination.PageEnd, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsPagination) GetPageEnd() int {
	return v.PageEnd
}

// GetTotalRecords returns listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsPagination.TotalRecords, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsPagination) GetTotalRecords() int {
	return v.TotalRecords
}

// listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType includes the requested fields of the GraphQL type DeviceGroupRelationshipType.
type listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType struct {
	Id          string `json:"id"`
	CreatedAt   string `json:"createdAt"`
	UpdatedAt   string `json:"updatedAt"`
	DeletedAt   string `json:"deletedAt"`
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Metadata    string `json:"metadata"`
}

// GetId returns listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType.Id, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType) GetId() string {
	return v.Id
}

// GetCreatedAt returns listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType.CreatedAt, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType.UpdatedAt, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetDeletedAt returns listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType.DeletedAt, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType) GetDeletedAt() string {
	return v.DeletedAt
}

// GetToken returns listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType.Token, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType) GetToken() string {
	return v.Token
}

// GetName returns listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType.Name, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType) GetName() string {
	return v.Name
}

// GetDescription returns listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType.Description, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType) GetDescription() string {
	return v.Description
}

// GetMetadata returns listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType.Metadata, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResultsResultsDeviceGroupRelationshipType) GetMetadata() string {
	return v.Metadata
}

// listDeviceGroupRelationshipTypesResponse is returned by listDeviceGroupRelationshipTypes on success.
type listDeviceGroupRelationshipTypesResponse struct {
	DeviceGroupRelationshipTypes listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResults `json:"deviceGroupRelationshipTypes"`
}

// GetDeviceGroupRelationshipTypes returns listDeviceGroupRelationshipTypesResponse.DeviceGroupRelationshipTypes, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipTypesResponse) GetDeviceGroupRelationshipTypes() listDeviceGroupRelationshipTypesDeviceGroupRelationshipTypesDeviceGroupRelationshipTypeSearchResults {
	return v.DeviceGroupRelationshipTypes
}

// listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResults includes the requested fields of the GraphQL type DeviceGroupRelationshipSearchResults.
type listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResults struct {
	Results    []listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship `json:"results"`
	Pagination listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsPagination                       `json:"pagination"`
}

// GetResults returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResults.Results, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResults) GetResults() []listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship {
	return v.Results
}

// GetPagination returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResults.Pagination, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResults) GetPagination() listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsPagination {
	return v.Pagination
}

// listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsPagination includes the requested fields of the GraphQL type SearchResultsPagination.
type listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsPagination struct {
	PageStart    int `json:"pageStart"`
	PageEnd      int `json:"pageEnd"`
	TotalRecords int `json:"totalRecords"`
}

// GetPageStart returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsPagination.PageStart, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsPagination) GetPageStart() int {
	return v.PageStart
}

// GetPageEnd returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsPagination.PageEnd, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsPagination) GetPageEnd() int {
	return v.PageEnd
}

// GetTotalRecords returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsPagination.TotalRecords, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsPagination) GetTotalRecords() int {
	return v.TotalRecords
}

// listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship includes the requested fields of the GraphQL type DeviceGroupRelationship.
type listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship struct {
	Id               string                                                                                                                                                            `json:"id"`
	CreatedAt        string                                                                                                                                                            `json:"createdAt"`
	UpdatedAt        string                                                                                                                                                            `json:"updatedAt"`
	DeletedAt        string                                                                                                                                                            `json:"deletedAt"`
	Token            string                                                                                                                                                            `json:"token"`
	DeviceGroup      listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDeviceGroup                                 `json:"deviceGroup"`
	Device           listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDevice                                      `json:"device"`
	RelationshipType listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType `json:"relationshipType"`
	Metadata         string                                                                                                                                                            `json:"metadata"`
}

// GetId returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship.Id, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship) GetId() string {
	return v.Id
}

// GetCreatedAt returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship.CreatedAt, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship.UpdatedAt, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetDeletedAt returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship.DeletedAt, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship) GetDeletedAt() string {
	return v.DeletedAt
}

// GetToken returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship.Token, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship) GetToken() string {
	return v.Token
}

// GetDeviceGroup returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship.DeviceGroup, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship) GetDeviceGroup() listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDeviceGroup {
	return v.DeviceGroup
}

// GetDevice returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship.Device, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship) GetDevice() listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDevice {
	return v.Device
}

// GetRelationshipType returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship.RelationshipType, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship) GetRelationshipType() listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType {
	return v.RelationshipType
}

// GetMetadata returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship.Metadata, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationship) GetMetadata() string {
	return v.Metadata
}

// listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDevice includes the requested fields of the GraphQL type Device.
type listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDevice struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDevice.Token, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDevice) GetToken() string {
	return v.Token
}

// GetName returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDevice.Name, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDevice) GetName() string {
	return v.Name
}

// GetDescription returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDevice.Description, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDevice) GetDescription() string {
	return v.Description
}

// listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDeviceGroup includes the requested fields of the GraphQL type DeviceGroup.
type listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDeviceGroup struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDeviceGroup.Token, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDeviceGroup) GetToken() string {
	return v.Token
}

// GetName returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDeviceGroup.Name, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDeviceGroup) GetName() string {
	return v.Name
}

// GetDescription returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDeviceGroup.Description, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipDeviceGroup) GetDescription() string {
	return v.Description
}

// listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType includes the requested fields of the GraphQL type DeviceGroupRelationshipType.
type listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType.Token, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType) GetToken() string {
	return v.Token
}

// GetName returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType.Name, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType) GetName() string {
	return v.Name
}

// GetDescription returns listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType.Description, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResultsResultsDeviceGroupRelationshipRelationshipTypeDeviceGroupRelationshipType) GetDescription() string {
	return v.Description
}

// listDeviceGroupRelationshipsResponse is returned by listDeviceGroupRelationships on success.
type listDeviceGroupRelationshipsResponse struct {
	DeviceGroupRelationships listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResults `json:"deviceGroupRelationships"`
}

// GetDeviceGroupRelationships returns listDeviceGroupRelationshipsResponse.DeviceGroupRelationships, and is useful for accessing the field via an interface.
func (v *listDeviceGroupRelationshipsResponse) GetDeviceGroupRelationships() listDeviceGroupRelationshipsDeviceGroupRelationshipsDeviceGroupRelationshipSearchResults {
	return v.DeviceGroupRelationships
}

// listDeviceGroupsDeviceGroupsDeviceGroupSearchResults includes the requested fields of the GraphQL type DeviceGroupSearchResults.
type listDeviceGroupsDeviceGroupsDeviceGroupSearchResults struct {
	Results    []listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup `json:"results"`
	Pagination listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsPagination           `json:"pagination"`
}

// GetResults returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResults.Results, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResults) GetResults() []listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup {
	return v.Results
}

// GetPagination returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResults.Pagination, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResults) GetPagination() listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsPagination {
	return v.Pagination
}

// listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsPagination includes the requested fields of the GraphQL type SearchResultsPagination.
type listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsPagination struct {
	PageStart    int `json:"pageStart"`
	PageEnd      int `json:"pageEnd"`
	TotalRecords int `json:"totalRecords"`
}

// GetPageStart returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsPagination.PageStart, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsPagination) GetPageStart() int {
	return v.PageStart
}

// GetPageEnd returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsPagination.PageEnd, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsPagination) GetPageEnd() int {
	return v.PageEnd
}

// GetTotalRecords returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsPagination.TotalRecords, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsPagination) GetTotalRecords() int {
	return v.TotalRecords
}

// listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup includes the requested fields of the GraphQL type DeviceGroup.
type listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup struct {
	Id              string `json:"id"`
	CreatedAt       string `json:"createdAt"`
	UpdatedAt       string `json:"updatedAt"`
	DeletedAt       string `json:"deletedAt"`
	Token           string `json:"token"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	ImageUrl        string `json:"imageUrl"`
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
	ForegroundColor string `json:"foregroundColor"`
	BorderColor     string `json:"borderColor"`
	Metadata        string `json:"metadata"`
}

// GetId returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup.Id, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup) GetId() string {
	return v.Id
}

// GetCreatedAt returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup.CreatedAt, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup.UpdatedAt, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetDeletedAt returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup.DeletedAt, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup) GetDeletedAt() string {
	return v.DeletedAt
}

// GetToken returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup.Token, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup) GetToken() string {
	return v.Token
}

// GetName returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup.Name, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup) GetName() string {
	return v.Name
}

// GetDescription returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup.Description, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup) GetDescription() string {
	return v.Description
}

// GetImageUrl returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup.ImageUrl, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup) GetImageUrl() string {
	return v.ImageUrl
}

// GetIcon returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup.Icon, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup) GetIcon() string {
	return v.Icon
}

// GetBackgroundColor returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup.BackgroundColor, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup) GetBackgroundColor() string {
	return v.BackgroundColor
}

// GetForegroundColor returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup.ForegroundColor, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup) GetForegroundColor() string {
	return v.ForegroundColor
}

// GetBorderColor returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup.BorderColor, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup) GetBorderColor() string {
	return v.BorderColor
}

// GetMetadata returns listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup.Metadata, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsDeviceGroupsDeviceGroupSearchResultsResultsDeviceGroup) GetMetadata() string {
	return v.Metadata
}

// listDeviceGroupsResponse is returned by listDeviceGroups on success.
type listDeviceGroupsResponse struct {
	DeviceGroups listDeviceGroupsDeviceGroupsDeviceGroupSearchResults `json:"deviceGroups"`
}

// GetDeviceGroups returns listDeviceGroupsResponse.DeviceGroups, and is useful for accessing the field via an interface.
func (v *listDeviceGroupsResponse) GetDeviceGroups() listDeviceGroupsDeviceGroupsDeviceGroupSearchResults {
	return v.DeviceGroups
}

// listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResults includes the requested fields of the GraphQL type DeviceRelationshipTypeSearchResults.
type listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResults struct {
	Results    []listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType `json:"results"`
	Pagination listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsPagination                      `json:"pagination"`
}

// GetResults returns listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResults.Results, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResults) GetResults() []listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType {
	return v.Results
}

// GetPagination returns listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResults.Pagination, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResults) GetPagination() listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsPagination {
	return v.Pagination
}

// listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsPagination includes the requested fields of the GraphQL type SearchResultsPagination.
type listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsPagination struct {
	PageStart    int `json:"pageStart"`
	PageEnd      int `json:"pageEnd"`
	TotalRecords int `json:"totalRecords"`
}

// GetPageStart returns listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsPagination.PageStart, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsPagination) GetPageStart() int {
	return v.PageStart
}

// GetPageEnd returns listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsPagination.PageEnd, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsPagination) GetPageEnd() int {
	return v.PageEnd
}

// GetTotalRecords returns listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsPagination.TotalRecords, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsPagination) GetTotalRecords() int {
	return v.TotalRecords
}

// listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType includes the requested fields of the GraphQL type DeviceRelationshipType.
type listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType struct {
	Id          string `json:"id"`
	CreatedAt   string `json:"createdAt"`
	UpdatedAt   string `json:"updatedAt"`
	DeletedAt   string `json:"deletedAt"`
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Metadata    string `json:"metadata"`
}

// GetId returns listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType.Id, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType) GetId() string {
	return v.Id
}

// GetCreatedAt returns listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType.CreatedAt, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType.UpdatedAt, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetDeletedAt returns listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType.DeletedAt, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType) GetDeletedAt() string {
	return v.DeletedAt
}

// GetToken returns listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType.Token, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType) GetToken() string {
	return v.Token
}

// GetName returns listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType.Name, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType) GetName() string {
	return v.Name
}

// GetDescription returns listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType.Description, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType) GetDescription() string {
	return v.Description
}

// GetMetadata returns listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType.Metadata, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResultsResultsDeviceRelationshipType) GetMetadata() string {
	return v.Metadata
}

// listDeviceRelationshipTypesResponse is returned by listDeviceRelationshipTypes on success.
type listDeviceRelationshipTypesResponse struct {
	DeviceRelationshipTypes listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResults `json:"deviceRelationshipTypes"`
}

// GetDeviceRelationshipTypes returns listDeviceRelationshipTypesResponse.DeviceRelationshipTypes, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipTypesResponse) GetDeviceRelationshipTypes() listDeviceRelationshipTypesDeviceRelationshipTypesDeviceRelationshipTypeSearchResults {
	return v.DeviceRelationshipTypes
}

// listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResults includes the requested fields of the GraphQL type DeviceRelationshipSearchResults.
type listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResults struct {
	Results    []listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship `json:"results"`
	Pagination listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsPagination                  `json:"pagination"`
}

// GetResults returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResults.Results, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResults) GetResults() []listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship {
	return v.Results
}

// GetPagination returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResults.Pagination, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResults) GetPagination() listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsPagination {
	return v.Pagination
}

// listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsPagination includes the requested fields of the GraphQL type SearchResultsPagination.
type listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsPagination struct {
	PageStart    int `json:"pageStart"`
	PageEnd      int `json:"pageEnd"`
	TotalRecords int `json:"totalRecords"`
}

// GetPageStart returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsPagination.PageStart, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsPagination) GetPageStart() int {
	return v.PageStart
}

// GetPageEnd returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsPagination.PageEnd, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsPagination) GetPageEnd() int {
	return v.PageEnd
}

// GetTotalRecords returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsPagination.TotalRecords, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsPagination) GetTotalRecords() int {
	return v.TotalRecords
}

// listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship includes the requested fields of the GraphQL type DeviceRelationship.
type listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship struct {
	Id               string                                                                                                                                   `json:"id"`
	SourceDevice     listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipSourceDevice                           `json:"sourceDevice"`
	TargetDevice     listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipTargetDevice                           `json:"targetDevice"`
	RelationshipType listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipRelationshipTypeDeviceRelationshipType `json:"relationshipType"`
	Metadata         string                                                                                                                                   `json:"metadata"`
}

// GetId returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship.Id, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship) GetId() string {
	return v.Id
}

// GetSourceDevice returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship.SourceDevice, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship) GetSourceDevice() listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipSourceDevice {
	return v.SourceDevice
}

// GetTargetDevice returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship.TargetDevice, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship) GetTargetDevice() listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipTargetDevice {
	return v.TargetDevice
}

// GetRelationshipType returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship.RelationshipType, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship) GetRelationshipType() listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipRelationshipTypeDeviceRelationshipType {
	return v.RelationshipType
}

// GetMetadata returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship.Metadata, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationship) GetMetadata() string {
	return v.Metadata
}

// listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipRelationshipTypeDeviceRelationshipType includes the requested fields of the GraphQL type DeviceRelationshipType.
type listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipRelationshipTypeDeviceRelationshipType struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipRelationshipTypeDeviceRelationshipType.Token, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipRelationshipTypeDeviceRelationshipType) GetToken() string {
	return v.Token
}

// GetName returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipRelationshipTypeDeviceRelationshipType.Name, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipRelationshipTypeDeviceRelationshipType) GetName() string {
	return v.Name
}

// GetDescription returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipRelationshipTypeDeviceRelationshipType.Description, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipRelationshipTypeDeviceRelationshipType) GetDescription() string {
	return v.Description
}

// listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipSourceDevice includes the requested fields of the GraphQL type Device.
type listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipSourceDevice struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipSourceDevice.Token, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipSourceDevice) GetToken() string {
	return v.Token
}

// GetName returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipSourceDevice.Name, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipSourceDevice) GetName() string {
	return v.Name
}

// GetDescription returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipSourceDevice.Description, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipSourceDevice) GetDescription() string {
	return v.Description
}

// listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipTargetDevice includes the requested fields of the GraphQL type Device.
type listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipTargetDevice struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipTargetDevice.Token, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipTargetDevice) GetToken() string {
	return v.Token
}

// GetName returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipTargetDevice.Name, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipTargetDevice) GetName() string {
	return v.Name
}

// GetDescription returns listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipTargetDevice.Description, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResultsResultsDeviceRelationshipTargetDevice) GetDescription() string {
	return v.Description
}

// listDeviceRelationshipsResponse is returned by listDeviceRelationships on success.
type listDeviceRelationshipsResponse struct {
	DeviceRelationships listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResults `json:"deviceRelationships"`
}

// GetDeviceRelationships returns listDeviceRelationshipsResponse.DeviceRelationships, and is useful for accessing the field via an interface.
func (v *listDeviceRelationshipsResponse) GetDeviceRelationships() listDeviceRelationshipsDeviceRelationshipsDeviceRelationshipSearchResults {
	return v.DeviceRelationships
}

// listDeviceTypesDeviceTypesDeviceTypeSearchResults includes the requested fields of the GraphQL type DeviceTypeSearchResults.
type listDeviceTypesDeviceTypesDeviceTypeSearchResults struct {
	Results    []listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType `json:"results"`
	Pagination listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination          `json:"pagination"`
}

// GetResults returns listDeviceTypesDeviceTypesDeviceTypeSearchResults.Results, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResults) GetResults() []listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType {
	return v.Results
}

// GetPagination returns listDeviceTypesDeviceTypesDeviceTypeSearchResults.Pagination, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResults) GetPagination() listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination {
	return v.Pagination
}

// listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination includes the requested fields of the GraphQL type SearchResultsPagination.
type listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination struct {
	PageStart    int `json:"pageStart"`
	PageEnd      int `json:"pageEnd"`
	TotalRecords int `json:"totalRecords"`
}

// GetPageStart returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination.PageStart, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination) GetPageStart() int {
	return v.PageStart
}

// GetPageEnd returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination.PageEnd, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination) GetPageEnd() int {
	return v.PageEnd
}

// GetTotalRecords returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination.TotalRecords, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsPagination) GetTotalRecords() int {
	return v.TotalRecords
}

// listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType includes the requested fields of the GraphQL type DeviceType.
type listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType struct {
	Id              string `json:"id"`
	CreatedAt       string `json:"createdAt"`
	UpdatedAt       string `json:"updatedAt"`
	DeletedAt       string `json:"deletedAt"`
	Token           string `json:"token"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	ImageUrl        string `json:"imageUrl"`
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
	ForegroundColor string `json:"foregroundColor"`
	BorderColor     string `json:"borderColor"`
	Metadata        string `json:"metadata"`
}

// GetId returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.Id, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetId() string {
	return v.Id
}

// GetCreatedAt returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.CreatedAt, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.UpdatedAt, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetDeletedAt returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.DeletedAt, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetDeletedAt() string {
	return v.DeletedAt
}

// GetToken returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.Token, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetToken() string {
	return v.Token
}

// GetName returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.Name, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetName() string {
	return v.Name
}

// GetDescription returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.Description, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetDescription() string {
	return v.Description
}

// GetImageUrl returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.ImageUrl, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetImageUrl() string {
	return v.ImageUrl
}

// GetIcon returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.Icon, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetIcon() string {
	return v.Icon
}

// GetBackgroundColor returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.BackgroundColor, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetBackgroundColor() string {
	return v.BackgroundColor
}

// GetForegroundColor returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.ForegroundColor, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetForegroundColor() string {
	return v.ForegroundColor
}

// GetBorderColor returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.BorderColor, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetBorderColor() string {
	return v.BorderColor
}

// GetMetadata returns listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType.Metadata, and is useful for accessing the field via an interface.
func (v *listDeviceTypesDeviceTypesDeviceTypeSearchResultsResultsDeviceType) GetMetadata() string {
	return v.Metadata
}

// listDeviceTypesResponse is returned by listDeviceTypes on success.
type listDeviceTypesResponse struct {
	DeviceTypes listDeviceTypesDeviceTypesDeviceTypeSearchResults `json:"deviceTypes"`
}

// GetDeviceTypes returns listDeviceTypesResponse.DeviceTypes, and is useful for accessing the field via an interface.
func (v *listDeviceTypesResponse) GetDeviceTypes() listDeviceTypesDeviceTypesDeviceTypeSearchResults {
	return v.DeviceTypes
}

// listDevicesDevicesDeviceSearchResults includes the requested fields of the GraphQL type DeviceSearchResults.
type listDevicesDevicesDeviceSearchResults struct {
	Results    []listDevicesDevicesDeviceSearchResultsResultsDevice `json:"results"`
	Pagination listDevicesDevicesDeviceSearchResultsPagination      `json:"pagination"`
}

// GetResults returns listDevicesDevicesDeviceSearchResults.Results, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResults) GetResults() []listDevicesDevicesDeviceSearchResultsResultsDevice {
	return v.Results
}

// GetPagination returns listDevicesDevicesDeviceSearchResults.Pagination, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResults) GetPagination() listDevicesDevicesDeviceSearchResultsPagination {
	return v.Pagination
}

// listDevicesDevicesDeviceSearchResultsPagination includes the requested fields of the GraphQL type SearchResultsPagination.
type listDevicesDevicesDeviceSearchResultsPagination struct {
	PageStart    int `json:"pageStart"`
	PageEnd      int `json:"pageEnd"`
	TotalRecords int `json:"totalRecords"`
}

// GetPageStart returns listDevicesDevicesDeviceSearchResultsPagination.PageStart, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsPagination) GetPageStart() int { return v.PageStart }

// GetPageEnd returns listDevicesDevicesDeviceSearchResultsPagination.PageEnd, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsPagination) GetPageEnd() int { return v.PageEnd }

// GetTotalRecords returns listDevicesDevicesDeviceSearchResultsPagination.TotalRecords, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsPagination) GetTotalRecords() int {
	return v.TotalRecords
}

// listDevicesDevicesDeviceSearchResultsResultsDevice includes the requested fields of the GraphQL type Device.
type listDevicesDevicesDeviceSearchResultsResultsDevice struct {
	Id                string                                                                                `json:"id"`
	CreatedAt         string                                                                                `json:"createdAt"`
	UpdatedAt         string                                                                                `json:"updatedAt"`
	DeletedAt         string                                                                                `json:"deletedAt"`
	Token             string                                                                                `json:"token"`
	Name              string                                                                                `json:"name"`
	Description       string                                                                                `json:"description"`
	DeviceType        listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType                          `json:"deviceType"`
	ActiveAssignments []listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment `json:"activeAssignments"`
	Metadata          string                                                                                `json:"metadata"`
}

// GetId returns listDevicesDevicesDeviceSearchResultsResultsDevice.Id, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetId() string { return v.Id }

// GetCreatedAt returns listDevicesDevicesDeviceSearchResultsResultsDevice.CreatedAt, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetCreatedAt() string {
	return v.CreatedAt
}

// GetUpdatedAt returns listDevicesDevicesDeviceSearchResultsResultsDevice.UpdatedAt, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetUpdatedAt() string {
	return v.UpdatedAt
}

// GetDeletedAt returns listDevicesDevicesDeviceSearchResultsResultsDevice.DeletedAt, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetDeletedAt() string {
	return v.DeletedAt
}

// GetToken returns listDevicesDevicesDeviceSearchResultsResultsDevice.Token, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetToken() string { return v.Token }

// GetName returns listDevicesDevicesDeviceSearchResultsResultsDevice.Name, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetName() string { return v.Name }

// GetDescription returns listDevicesDevicesDeviceSearchResultsResultsDevice.Description, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetDescription() string {
	return v.Description
}

// GetDeviceType returns listDevicesDevicesDeviceSearchResultsResultsDevice.DeviceType, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetDeviceType() listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType {
	return v.DeviceType
}

// GetActiveAssignments returns listDevicesDevicesDeviceSearchResultsResultsDevice.ActiveAssignments, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetActiveAssignments() []listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment {
	return v.ActiveAssignments
}

// GetMetadata returns listDevicesDevicesDeviceSearchResultsResultsDevice.Metadata, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDevice) GetMetadata() string { return v.Metadata }

// listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment includes the requested fields of the GraphQL type DeviceAssignment.
type listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment struct {
	Token string `json:"token"`
}

// GetToken returns listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment.Token, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDeviceActiveAssignmentsDeviceAssignment) GetToken() string {
	return v.Token
}

// listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType includes the requested fields of the GraphQL type DeviceType.
type listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType struct {
	Token       string `json:"token"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetToken returns listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType.Token, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType) GetToken() string {
	return v.Token
}

// GetName returns listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType.Name, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType) GetName() string {
	return v.Name
}

// GetDescription returns listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType.Description, and is useful for accessing the field via an interface.
func (v *listDevicesDevicesDeviceSearchResultsResultsDeviceDeviceType) GetDescription() string {
	return v.Description
}

// listDevicesResponse is returned by listDevices on success.
type listDevicesResponse struct {
	Devices listDevicesDevicesDeviceSearchResults `json:"devices"`
}

// GetDevices returns listDevicesResponse.Devices, and is useful for accessing the field via an interface.
func (v *listDevicesResponse) GetDevices() listDevicesDevicesDeviceSearchResults { return v.Devices }

// Create device and return identifiers.
func createDevice(
	ctx context.Context,
	client graphql.Client,
	token string,
	deviceTypeToken string,
	name string,
	description string,
	metadata string,
) (*createDeviceResponse, error) {
	__input := __createDeviceInput{
		Token:           token,
		DeviceTypeToken: deviceTypeToken,
		Name:            name,
		Description:     description,
		Metadata:        metadata,
	}
	var err error

	var retval createDeviceResponse
	err = client.MakeRequest(
		ctx,
		"createDevice",
		`
mutation createDevice ($token: String!, $deviceTypeToken: String!, $name: String, $description: String, $metadata: String) {
	createDevice(request: {token:$token,deviceTypeToken:$deviceTypeToken,name:$name,description:$description,metadata:$metadata}) {
		id
		token
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Create device group and return identifiers.
func createDeviceGroup(
	ctx context.Context,
	client graphql.Client,
	token string,
	name string,
	description string,
	imageUrl string,
	icon string,
	backgroundColor string,
	foregroundColor string,
	borderColor string,
	metadata string,
) (*createDeviceGroupResponse, error) {
	__input := __createDeviceGroupInput{
		Token:           token,
		Name:            name,
		Description:     description,
		ImageUrl:        imageUrl,
		Icon:            icon,
		BackgroundColor: backgroundColor,
		ForegroundColor: foregroundColor,
		BorderColor:     borderColor,
		Metadata:        metadata,
	}
	var err error

	var retval createDeviceGroupResponse
	err = client.MakeRequest(
		ctx,
		"createDeviceGroup",
		`
mutation createDeviceGroup ($token: String!, $name: String, $description: String, $imageUrl: String, $icon: String, $backgroundColor: String, $foregroundColor: String, $borderColor: String, $metadata: String) {
	createDeviceGroup(request: {token:$token,name:$name,description:$description,imageUrl:$imageUrl,icon:$icon,backgroundColor:$backgroundColor,foregroundColor:$foregroundColor,borderColor:$borderColor,metadata:$metadata}) {
		id
		token
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Create device group relationship and return identifiers.
func createDeviceGroupRelationship(
	ctx context.Context,
	client graphql.Client,
	token string,
	deviceGroup string,
	device string,
	relationshipType string,
) (*createDeviceGroupRelationshipResponse, error) {
	__input := __createDeviceGroupRelationshipInput{
		Token:            token,
		DeviceGroup:      deviceGroup,
		Device:           device,
		RelationshipType: relationshipType,
	}
	var err error

	var retval createDeviceGroupRelationshipResponse
	err = client.MakeRequest(
		ctx,
		"createDeviceGroupRelationship",
		`
mutation createDeviceGroupRelationship ($token: String!, $deviceGroup: String!, $device: String!, $relationshipType: String!) {
	createDeviceGroupRelationship(request: {token:$token,deviceGroup:$deviceGroup,device:$device,relationshipType:$relationshipType}) {
		id
		token
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Create device group relationship type and return identifiers.
func createDeviceGroupRelationshipType(
	ctx context.Context,
	client graphql.Client,
	token string,
	name string,
	description string,
	metadata string,
) (*createDeviceGroupRelationshipTypeResponse, error) {
	__input := __createDeviceGroupRelationshipTypeInput{
		Token:       token,
		Name:        name,
		Description: description,
		Metadata:    metadata,
	}
	var err error

	var retval createDeviceGroupRelationshipTypeResponse
	err = client.MakeRequest(
		ctx,
		"createDeviceGroupRelationshipType",
		`
mutation createDeviceGroupRelationshipType ($token: String!, $name: String, $description: String, $metadata: String) {
	createDeviceGroupRelationshipType(request: {token:$token,name:$name,description:$description,metadata:$metadata}) {
		id
		token
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Create device relationship and return identifiers.
func createDeviceRelationship(
	ctx context.Context,
	client graphql.Client,
	token string,
	sourceDevice string,
	targetDevice string,
	relationshipType string,
) (*createDeviceRelationshipResponse, error) {
	__input := __createDeviceRelationshipInput{
		Token:            token,
		SourceDevice:     sourceDevice,
		TargetDevice:     targetDevice,
		RelationshipType: relationshipType,
	}
	var err error

	var retval createDeviceRelationshipResponse
	err = client.MakeRequest(
		ctx,
		"createDeviceRelationship",
		`
mutation createDeviceRelationship ($token: String!, $sourceDevice: String!, $targetDevice: String!, $relationshipType: String!) {
	createDeviceRelationship(request: {token:$token,sourceDevice:$sourceDevice,targetDevice:$targetDevice,relationshipType:$relationshipType}) {
		id
		token
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Create device relationship type and return identifiers.
func createDeviceRelationshipType(
	ctx context.Context,
	client graphql.Client,
	token string,
	name string,
	description string,
	metadata string,
) (*createDeviceRelationshipTypeResponse, error) {
	__input := __createDeviceRelationshipTypeInput{
		Token:       token,
		Name:        name,
		Description: description,
		Metadata:    metadata,
	}
	var err error

	var retval createDeviceRelationshipTypeResponse
	err = client.MakeRequest(
		ctx,
		"createDeviceRelationshipType",
		`
mutation createDeviceRelationshipType ($token: String!, $name: String, $description: String, $metadata: String) {
	createDeviceRelationshipType(request: {token:$token,name:$name,description:$description,metadata:$metadata}) {
		id
		token
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Create device type and return identifiers.
func createDeviceType(
	ctx context.Context,
	client graphql.Client,
	token string,
	name string,
	description string,
	imageUrl string,
	icon string,
	backgroundColor string,
	foregroundColor string,
	borderColor string,
	metadata string,
) (*createDeviceTypeResponse, error) {
	__input := __createDeviceTypeInput{
		Token:           token,
		Name:            name,
		Description:     description,
		ImageUrl:        imageUrl,
		Icon:            icon,
		BackgroundColor: backgroundColor,
		ForegroundColor: foregroundColor,
		BorderColor:     borderColor,
		Metadata:        metadata,
	}
	var err error

	var retval createDeviceTypeResponse
	err = client.MakeRequest(
		ctx,
		"createDeviceType",
		`
mutation createDeviceType ($token: String!, $name: String, $description: String, $imageUrl: String, $icon: String, $backgroundColor: String, $foregroundColor: String, $borderColor: String, $metadata: String) {
	createDeviceType(request: {token:$token,name:$name,description:$description,imageUrl:$imageUrl,icon:$icon,backgroundColor:$backgroundColor,foregroundColor:$foregroundColor,borderColor:$borderColor,metadata:$metadata}) {
		id
		token
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Get device by unique token.
func getDeviceByToken(
	ctx context.Context,
	client graphql.Client,
	token string,
) (*getDeviceByTokenResponse, error) {
	__input := __getDeviceByTokenInput{
		Token: token,
	}
	var err error

	var retval getDeviceByTokenResponse
	err = client.MakeRequest(
		ctx,
		"getDeviceByToken",
		`
query getDeviceByToken ($token: String!) {
	deviceByToken(token: $token) {
		id
		createdAt
		updatedAt
		deletedAt
		token
		name
		description
		deviceType {
			token
			name
			description
		}
		activeAssignments {
			token
		}
		metadata
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Get device group by unique token.
func getDeviceGroupByToken(
	ctx context.Context,
	client graphql.Client,
	token string,
) (*getDeviceGroupByTokenResponse, error) {
	__input := __getDeviceGroupByTokenInput{
		Token: token,
	}
	var err error

	var retval getDeviceGroupByTokenResponse
	err = client.MakeRequest(
		ctx,
		"getDeviceGroupByToken",
		`
query getDeviceGroupByToken ($token: String!) {
	deviceGroupByToken(token: $token) {
		id
		createdAt
		updatedAt
		deletedAt
		token
		name
		description
		imageUrl
		icon
		backgroundColor
		foregroundColor
		borderColor
		metadata
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Get device group relationship by unique token.
func getDeviceGroupRelationshipByToken(
	ctx context.Context,
	client graphql.Client,
	token string,
) (*getDeviceGroupRelationshipByTokenResponse, error) {
	__input := __getDeviceGroupRelationshipByTokenInput{
		Token: token,
	}
	var err error

	var retval getDeviceGroupRelationshipByTokenResponse
	err = client.MakeRequest(
		ctx,
		"getDeviceGroupRelationshipByToken",
		`
query getDeviceGroupRelationshipByToken ($token: String!) {
	deviceGroupRelationshipByToken(token: $token) {
		id
		createdAt
		updatedAt
		deletedAt
		token
		deviceGroup {
			token
			name
			description
		}
		device {
			token
			name
			description
		}
		relationshipType {
			token
			name
			description
		}
		metadata
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Get device group relationship type by unique token.
func getDeviceGroupRelationshipTypeByToken(
	ctx context.Context,
	client graphql.Client,
	token string,
) (*getDeviceGroupRelationshipTypeByTokenResponse, error) {
	__input := __getDeviceGroupRelationshipTypeByTokenInput{
		Token: token,
	}
	var err error

	var retval getDeviceGroupRelationshipTypeByTokenResponse
	err = client.MakeRequest(
		ctx,
		"getDeviceGroupRelationshipTypeByToken",
		`
query getDeviceGroupRelationshipTypeByToken ($token: String!) {
	deviceGroupRelationshipTypeByToken(token: $token) {
		id
		createdAt
		updatedAt
		deletedAt
		token
		name
		description
		metadata
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Get device relationship by unique token.
func getDeviceRelationshipByToken(
	ctx context.Context,
	client graphql.Client,
	token string,
) (*getDeviceRelationshipByTokenResponse, error) {
	__input := __getDeviceRelationshipByTokenInput{
		Token: token,
	}
	var err error

	var retval getDeviceRelationshipByTokenResponse
	err = client.MakeRequest(
		ctx,
		"getDeviceRelationshipByToken",
		`
query getDeviceRelationshipByToken ($token: String!) {
	deviceRelationshipByToken(token: $token) {
		id
		createdAt
		updatedAt
		deletedAt
		token
		sourceDevice {
			token
			name
			description
		}
		targetDevice {
			token
			name
			description
		}
		relationshipType {
			token
			name
			description
		}
		metadata
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Get device relationship type by unique token.
func getDeviceRelationshipTypeByToken(
	ctx context.Context,
	client graphql.Client,
	token string,
) (*getDeviceRelationshipTypeByTokenResponse, error) {
	__input := __getDeviceRelationshipTypeByTokenInput{
		Token: token,
	}
	var err error

	var retval getDeviceRelationshipTypeByTokenResponse
	err = client.MakeRequest(
		ctx,
		"getDeviceRelationshipTypeByToken",
		`
query getDeviceRelationshipTypeByToken ($token: String!) {
	deviceRelationshipTypeByToken(token: $token) {
		id
		createdAt
		updatedAt
		deletedAt
		token
		name
		description
		metadata
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// Get device type by unique token.
func getDeviceTypeByToken(
	ctx context.Context,
	client graphql.Client,
	token string,
) (*getDeviceTypeByTokenResponse, error) {
	__input := __getDeviceTypeByTokenInput{
		Token: token,
	}
	var err error

	var retval getDeviceTypeByTokenResponse
	err = client.MakeRequest(
		ctx,
		"getDeviceTypeByToken",
		`
query getDeviceTypeByToken ($token: String!) {
	deviceTypeByToken(token: $token) {
		id
		createdAt
		updatedAt
		deletedAt
		token
		name
		description
		imageUrl
		icon
		backgroundColor
		foregroundColor
		borderColor
		metadata
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// List device group relationship types that match criteria.
func listDeviceGroupRelationshipTypes(
	ctx context.Context,
	client graphql.Client,
	pageNumber int,
	pageSize int,
) (*listDeviceGroupRelationshipTypesResponse, error) {
	__input := __listDeviceGroupRelationshipTypesInput{
		PageNumber: pageNumber,
		PageSize:   pageSize,
	}
	var err error

	var retval listDeviceGroupRelationshipTypesResponse
	err = client.MakeRequest(
		ctx,
		"listDeviceGroupRelationshipTypes",
		`
query listDeviceGroupRelationshipTypes ($pageNumber: Int!, $pageSize: Int!) {
	deviceGroupRelationshipTypes(criteria: {pageNumber:$pageNumber,pageSize:$pageSize}) {
		results {
			id
			createdAt
			updatedAt
			deletedAt
			token
			name
			description
			metadata
		}
		pagination {
			pageStart
			pageEnd
			totalRecords
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// List device group relationships that match criteria.
func listDeviceGroupRelationships(
	ctx context.Context,
	client graphql.Client,
	pageNumber int,
	pageSize int,
) (*listDeviceGroupRelationshipsResponse, error) {
	__input := __listDeviceGroupRelationshipsInput{
		PageNumber: pageNumber,
		PageSize:   pageSize,
	}
	var err error

	var retval listDeviceGroupRelationshipsResponse
	err = client.MakeRequest(
		ctx,
		"listDeviceGroupRelationships",
		`
query listDeviceGroupRelationships ($pageNumber: Int!, $pageSize: Int!) {
	deviceGroupRelationships(criteria: {pageNumber:$pageNumber,pageSize:$pageSize}) {
		results {
			id
			createdAt
			updatedAt
			deletedAt
			token
			deviceGroup {
				token
				name
				description
			}
			device {
				token
				name
				description
			}
			relationshipType {
				token
				name
				description
			}
			metadata
		}
		pagination {
			pageStart
			pageEnd
			totalRecords
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// List device groups that match criteria.
func listDeviceGroups(
	ctx context.Context,
	client graphql.Client,
	pageNumber int,
	pageSize int,
) (*listDeviceGroupsResponse, error) {
	__input := __listDeviceGroupsInput{
		PageNumber: pageNumber,
		PageSize:   pageSize,
	}
	var err error

	var retval listDeviceGroupsResponse
	err = client.MakeRequest(
		ctx,
		"listDeviceGroups",
		`
query listDeviceGroups ($pageNumber: Int!, $pageSize: Int!) {
	deviceGroups(criteria: {pageNumber:$pageNumber,pageSize:$pageSize}) {
		results {
			id
			createdAt
			updatedAt
			deletedAt
			token
			name
			description
			imageUrl
			icon
			backgroundColor
			foregroundColor
			borderColor
			metadata
		}
		pagination {
			pageStart
			pageEnd
			totalRecords
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// List device relationship types that match criteria.
func listDeviceRelationshipTypes(
	ctx context.Context,
	client graphql.Client,
	pageNumber int,
	pageSize int,
) (*listDeviceRelationshipTypesResponse, error) {
	__input := __listDeviceRelationshipTypesInput{
		PageNumber: pageNumber,
		PageSize:   pageSize,
	}
	var err error

	var retval listDeviceRelationshipTypesResponse
	err = client.MakeRequest(
		ctx,
		"listDeviceRelationshipTypes",
		`
query listDeviceRelationshipTypes ($pageNumber: Int!, $pageSize: Int!) {
	deviceRelationshipTypes(criteria: {pageNumber:$pageNumber,pageSize:$pageSize}) {
		results {
			id
			createdAt
			updatedAt
			deletedAt
			token
			name
			description
			metadata
		}
		pagination {
			pageStart
			pageEnd
			totalRecords
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// List device relationships that match criteria.
func listDeviceRelationships(
	ctx context.Context,
	client graphql.Client,
	pageNumber int,
	pageSize int,
) (*listDeviceRelationshipsResponse, error) {
	__input := __listDeviceRelationshipsInput{
		PageNumber: pageNumber,
		PageSize:   pageSize,
	}
	var err error

	var retval listDeviceRelationshipsResponse
	err = client.MakeRequest(
		ctx,
		"listDeviceRelationships",
		`
query listDeviceRelationships ($pageNumber: Int!, $pageSize: Int!) {
	deviceRelationships(criteria: {pageNumber:$pageNumber,pageSize:$pageSize}) {
		results {
			id
			sourceDevice {
				token
				name
				description
			}
			targetDevice {
				token
				name
				description
			}
			relationshipType {
				token
				name
				description
			}
			metadata
		}
		pagination {
			pageStart
			pageEnd
			totalRecords
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// List device types that match criteria.
func listDeviceTypes(
	ctx context.Context,
	client graphql.Client,
	pageNumber int,
	pageSize int,
) (*listDeviceTypesResponse, error) {
	__input := __listDeviceTypesInput{
		PageNumber: pageNumber,
		PageSize:   pageSize,
	}
	var err error

	var retval listDeviceTypesResponse
	err = client.MakeRequest(
		ctx,
		"listDeviceTypes",
		`
query listDeviceTypes ($pageNumber: Int!, $pageSize: Int!) {
	deviceTypes(criteria: {pageNumber:$pageNumber,pageSize:$pageSize}) {
		results {
			id
			createdAt
			updatedAt
			deletedAt
			token
			name
			description
			imageUrl
			icon
			backgroundColor
			foregroundColor
			borderColor
			metadata
		}
		pagination {
			pageStart
			pageEnd
			totalRecords
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

// List devices that match criteria.
func listDevices(
	ctx context.Context,
	client graphql.Client,
	pageNumber int,
	pageSize int,
) (*listDevicesResponse, error) {
	__input := __listDevicesInput{
		PageNumber: pageNumber,
		PageSize:   pageSize,
	}
	var err error

	var retval listDevicesResponse
	err = client.MakeRequest(
		ctx,
		"listDevices",
		`
query listDevices ($pageNumber: Int!, $pageSize: Int!) {
	devices(criteria: {pageNumber:$pageNumber,pageSize:$pageSize}) {
		results {
			id
			createdAt
			updatedAt
			deletedAt
			token
			name
			description
			deviceType {
				token
				name
				description
			}
			activeAssignments {
				token
			}
			metadata
		}
		pagination {
			pageStart
			pageEnd
			totalRecords
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}
