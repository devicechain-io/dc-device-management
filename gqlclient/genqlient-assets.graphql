# Create asset type and return identifiers.
mutation createAssetType($token: String!, $name: String, $description: String, 
  $imageUrl: String, $icon: String, $backgroundColor: String, $foregroundColor: String, $borderColor: String, $metadata: String) {
  createAssetType(request: { 
    token: $token,
    name: $name,
    description: $description,
    imageUrl: $imageUrl,
    icon: $icon,
    backgroundColor: $backgroundColor,
    foregroundColor: $foregroundColor,
    borderColor: $borderColor,
    metadata: $metadata
  }) {
    id
    token
  }
}

# Get asset types by unique tokens.
query getAssetTypesByToken($tokens: [String!]!) {
  assetTypesByToken(tokens: $tokens) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    imageUrl
    icon
    backgroundColor
    foregroundColor
    borderColor
    metadata
  }
}

# List asset types that match criteria.
query listAssetTypes($pageNumber: Int!, $pageSize: Int!) {
  assetTypes(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      name
      description
      imageUrl
      icon
      backgroundColor
      foregroundColor
      borderColor
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}

# Create asset and return identifiers.
mutation createAsset($token: String!, $assetTypeToken: String!, $name: String, $description: String, $metadata: String) {
  createAsset(request: { 
    token: $token, 
    assetTypeToken: $assetTypeToken,
    name: $name,
    description: $description,
    metadata: $metadata
  }) {
    id
    token
  }
}

# Get asset by unique token.
query getAssetsByToken($tokens: [String!]!) {
  assetsByToken(tokens: $tokens) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    assetType {
      token
      name
      description
    }
    metadata
  }
}

# List assets that match criteria.
query listAssets($pageNumber: Int!, $pageSize: Int!) {
  assets(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      name
      description
      assetType {
        token
        name
        description
      }
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}

# Create asset relationship type and return identifiers.
mutation createAssetRelationshipType($token: String!, $name: String, $description: String, $metadata: String) {
  createAssetRelationshipType(request: { 
    token: $token,
    name: $name,
    description: $description,
    metadata: $metadata
  }) {
    id
    token
  }
}

# Get asset relationship types by unique token.
query getAssetRelationshipTypesByToken($tokens: [String!]!) {
  assetRelationshipTypesByToken(tokens: $tokens) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    metadata
  }
}

# List asset relationship types that match criteria.
query listAssetRelationshipTypes($pageNumber: Int!, $pageSize: Int!) {
  assetRelationshipTypes(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      name
      description
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}

# Create asset relationship and return identifiers.
mutation createAssetRelationship($token: String!, $sourceAsset: String!, $targetAsset: String!, $relationshipType: String!) {
  createAssetRelationship(
    request: {
      token: $token,
      sourceAsset: $sourceAsset
      targetAsset: $targetAsset
      relationshipType: $relationshipType
    }
  ) {
    id
    token
  }
}

# Get asset relationships by unique token.
query getAssetRelationshipsByToken($tokens: [String!]!) {
  assetRelationshipsByToken(tokens: $tokens) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    sourceAsset {
      token
      name
      description
    }
    targetAsset {
      token
      name
      description
    }
    relationshipType {
      token
      name
      description
    }
    metadata
  }
}

# List asset relationships that match criteria.
query listAssetRelationships($pageNumber: Int!, $pageSize: Int!) {
  assetRelationships(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      sourceAsset {
        token
        name
        description
      }
      targetAsset {
        token
        name
        description
      }
      relationshipType {
        token
        name
        description
      }
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}

# Create asset group and return identifiers.
mutation createAssetGroup($token: String!, $name: String, $description: String, 
  $imageUrl: String, $icon: String, $backgroundColor: String, $foregroundColor: String, $borderColor: String, $metadata: String) {
  createAssetGroup(request: { 
    token: $token,
    name: $name,
    description: $description,
    imageUrl: $imageUrl,
    icon: $icon,
    backgroundColor: $backgroundColor,
    foregroundColor: $foregroundColor,
    borderColor: $borderColor,
    metadata: $metadata
  }) {
    id
    token
  }
}

# Get asset groups by unique token.
query getAssetGroupsByToken($tokens: [String!]!) {
  assetGroupsByToken(tokens: $tokens) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    imageUrl
    icon
    backgroundColor
    foregroundColor
    borderColor
    metadata
  }
}

# List asset groups that match criteria.
query listAssetGroups($pageNumber: Int!, $pageSize: Int!) {
  assetGroups(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      name
      description
      imageUrl
      icon
      backgroundColor
      foregroundColor
      borderColor
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}

# Create asset group relationship type and return identifiers.
mutation createAssetGroupRelationshipType($token: String!, $name: String, $description: String, $metadata: String) {
  createAssetGroupRelationshipType(request: { 
    token: $token,
    name: $name,
    description: $description,
    metadata: $metadata
  }) {
    id
    token
  }
}

# Get asset group relationship types by unique token.
query getAssetGroupRelationshipTypesByToken($tokens: [String!]!) {
  assetGroupRelationshipTypesByToken(tokens: $tokens) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    name
    description
    metadata
  }
}

# List asset group relationship types that match criteria.
query listAssetGroupRelationshipTypes($pageNumber: Int!, $pageSize: Int!) {
  assetGroupRelationshipTypes(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      name
      description
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}

# Create asset group relationship and return identifiers.
mutation createAssetGroupRelationship($token: String!, $assetGroup: String!, $asset: String!, $relationshipType: String!) {
  createAssetGroupRelationship(
    request: {
      token: $token,
      assetGroup: $assetGroup,
      asset: $asset,
      relationshipType: $relationshipType
    }
  ) {
    id
    token
  }
}

# Get asset group relationships by unique token.
query getAssetGroupRelationshipsByToken($tokens: [String!]!) {
  assetGroupRelationshipsByToken(tokens: $tokens) {
    id
    createdAt
    updatedAt
    deletedAt
    token
    assetGroup {
      token
      name
      description
    }
    asset {
      token
      name
      description
    }
    relationshipType {
      token
      name
      description
    }
    metadata
  }
}

# List asset group relationships that match criteria.
query listAssetGroupRelationships($pageNumber: Int!, $pageSize: Int!) {
  assetGroupRelationships(criteria: { pageNumber: $pageNumber, pageSize: $pageSize }) {
    results {
      id
      createdAt
      updatedAt
      deletedAt
      token
      assetGroup {
        token
        name
        description
      }
      asset {
        token
        name
        description
      }
      relationshipType {
        token
        name
        description
      }
      metadata
    }
    pagination {
      pageStart
      pageEnd
      totalRecords
    }
  }
}
